main
main/java
main/java/dynamicProgramming
main/java/dynamicProgramming/tutorials
main/java/dynamicProgramming/tutorials/fibonacci
main/java/dynamicProgramming/tutorials/introductionToAlgorithms
main/java/dynamicProgramming/tutorials/introductionToAlgorithms/_15_2_Matrix_chain_multiplication
main/java/dynamicProgramming/tutorials/introductionToAlgorithms/_15_2_Matrix_chain_multiplication/example
main/java/dynamicProgramming/_005_Longest_Palindromic_Substring
main/java/dynamicProgramming/_010_Regular_Expression_Matching
main/java/dynamicProgramming/_032_Longest_Valid_Parentheses
main/java/dynamicProgramming/_044_Wildcard_Matching
main/java/dynamicProgramming/_053_Maximum_Subarray
main/java/dynamicProgramming/_062_Unique_Paths
main/java/dynamicProgramming/_063_Unique_Paths_II
main/java/dynamicProgramming/_064_Minimum_Path_Sum
main/java/dynamicProgramming/_070_Climbing_Stairs
main/java/dynamicProgramming/_072_Edit_Distance
main/java/dynamicProgramming/_085_Maximal_Rectangle
main/java/dynamicProgramming/_087_Scramble_String
main/java/dynamicProgramming/_121_Best_Time_to_Buy_and_Sell_Stock
main/java/dynamicProgramming/_122_Best_Time_to_Buy_and_Sell_Stock_II
main/java/dynamicProgramming/_123_Best_Time_to_Buy_and_Sell_Stock_III
main/java/dynamicProgramming/_1397_Find_All_Good_Strings
main/java/dynamicProgramming/_188_Best_Time_to_Buy_and_Sell_Stock_IV
main/java/dynamicProgramming/_309_Best_Time_to_Buy_and_Sell_Stock_with_Cooldown
main/java/example
main/java/example/binarySearch
main/java/example/binarySearch/problemSet
main/java/example/binarySearch/problemSet/_033_Search_in_Rotated_Sorted_Array
main/java/example/binarySearch/problemSet/_069_Sqrt_x
main/java/example/binarySearch/problemSet/_374_Guess_Number_Higher_or_Lower
main/java/example/graph
main/java/example/greedyAlgorithm
main/java/example/hungarianAlgorithm
main/java/example/Inverse_Burrows_Wheeler_Transform
main/java/example/overrideEquals
main/java/example/overrideEquals/violateLiskovSubstitutionPrinciple
main/java/example/overrideEquals/violateSymmetry
main/java/example/permutation
main/java/example/segmentTree
main/java/example/sort
main/java/example/sort/radixSort
main/java/example/string
main/java/example/tree
main/java/example/unionFind
main/java/explore
main/java/explore/Check_If_a_String_Is_a_Valid_Sequence_from_Root_to_Leaves_Path_in_a_Binary_Tree
main/java/explore/Find_All_Anagrams_in_a_String
main/java/explore/LRUCache
main/java/explore/Number_Complement
main/java/explore/Perform_String_Shifts
main/java/explore/Valid_Parenthesis_String
main/java/explore/_1008_Construct_Binary_Search_Tree_from_Preorder_Traversal
main/java/explore/_1035_Uncrossed_Lines
main/java/explore/_124_Binary_Tree_Maximum_Path_Sum
main/java/explore/_169_Majority_Element
main/java/explore/_201_Bitwise_AND_of_Numbers_Range
main/java/explore/_221_Maximal_Square
main/java/explore/_328_Odd_Even_Linked_List
main/java/explore/_55_Jump_Game
main/java/explore/_997_Find_the_Town_Judge
main/java/_0001_0050
main/java/_0001_0050/_001_Two_Sum
main/java/_0001_0050/_002_Add_Two_Numbers
main/java/_0001_0050/_003_Longest_Substring_Without_Repeating_Characters
main/java/_0001_0050/_004_Median_of_Two_Sorted_Arrays
main/java/_0001_0050/_005_Longest_Palindromic_Substring
main/java/_0001_0050/_006_ZigZag_Conversion
main/java/_0001_0050/_007_Reverse_Integer
main/java/_0001_0050/_008_String_to_Integer
main/java/_0001_0050/_009_Palindrome_Number
main/java/_0001_0050/_010_Regular_Expression_Matching
main/java/_0001_0050/_011_Container_With_Most_Water
main/java/_0001_0050/_012_Integer_to_Roman
main/java/_0001_0050/_013_Roman_to_Integer
main/java/_0001_0050/_014_Longest_Common_Prefix
main/java/_0001_0050/_015_3Sum
main/java/_0001_0050/_016_3Sum_Closest
main/java/_0001_0050/_017_Letter_Combinations_of_a_Phone_Number
main/java/_0001_0050/_018_4Sum
main/java/_0001_0050/_019_Remove_Nth_Node_From_End_of_List
main/java/_0001_0050/_020_Valid_Parentheses
main/java/_0001_0050/_021_Merge_Two_Sorted_Lists
main/java/_0001_0050/_022_Generate_Parentheses
main/java/_0001_0050/_023_Merge_k_Sorted_Lists
main/java/_0001_0050/_024_Swap_Nodes_in_Pairs
main/java/_0001_0050/_025_Reverse_Nodes_in_k_Group
main/java/_0001_0050/_026_Remove_Duplicates_from_Sorted_Array
main/java/_0001_0050/_027_Remove_Element
main/java/_0001_0050/_028_Implement_strStr
main/java/_0001_0050/_029_Divide_Two_Integers
main/java/_0001_0050/_030_Substring_With_Concatenation_of_All_Words
main/java/_0001_0050/_031_Next_Permutation
main/java/_0001_0050/_032_Longest_Valid_Parentheses
main/java/_0001_0050/_033_Search_in_Rotated_Sorted_Array
main/java/_0001_0050/_034_Search_for_a_Range
main/java/_0001_0050/_035_Search_Insert_Position
main/java/_0001_0050/_036_Valid_Sudoku
main/java/_0001_0050/_037_Sudoku_Solver
main/java/_0001_0050/_038_Count_and_Say
main/java/_0001_0050/_039_Combination_Sum
main/java/_0001_0050/_040_Combination_Sum_II
main/java/_0001_0050/_041_First_Missing_Positive
main/java/_0001_0050/_042_Trapping_Rain_Water
main/java/_0001_0050/_043_Multiply_Strings
main/java/_0001_0050/_044_Wildcard_Matching
main/java/_0001_0050/_045_Jump_Game_II
main/java/_0001_0050/_046_Permutations
main/java/_0001_0050/_047_Permutations_II
main/java/_0001_0050/_048_Rotate_Image
main/java/_0001_0050/_049_Group_Anagrams
main/java/_0001_0050/_050_Pow_x_n
main/java/_0051_0100
main/java/_0051_0100/_051_N_Queens
main/java/_0051_0100/_052_N_Queens_II
main/java/_0051_0100/_053_Maximum_Subarray
main/java/_0051_0100/_054_Spiral_Matrix
main/java/_0051_0100/_055_Jump_Game
main/java/_0051_0100/_056_Merve_Intervals
main/java/_0051_0100/_057_Insert_Interval
main/java/_0051_0100/_058_Length_of_Last_Word
main/java/_0051_0100/_059_Spiral_Matrix_II
main/java/_0051_0100/_060_Permutation_Sequence
main/java/_0051_0100/_061_Rotate_List
main/java/_0051_0100/_062_Unique_Paths
main/java/_0051_0100/_063_Unique_Paths_II
main/java/_0051_0100/_064_Minimum_Path_Sum
main/java/_0051_0100/_065_Valid_Number
main/java/_0051_0100/_066_Plus_One
main/java/_0051_0100/_067_Add_Binary
main/java/_0051_0100/_068_Text_Justification
main/java/_0051_0100/_069_Sqrt_x
main/java/_0051_0100/_070_Climbing_Stairs
main/java/_0051_0100/_071_Simplify_Path
main/java/_0051_0100/_072_Edit_Distance
main/java/_0051_0100/_073_Set_Matrix_Zeroes
main/java/_0051_0100/_074_Search_a_2D_Matrix
main/java/_0051_0100/_075_Sort_Colors
main/java/_0051_0100/_076_Minimum_Window_Substring
main/java/_0051_0100/_077_Combinations
main/java/_0051_0100/_078_subset
main/java/_0051_0100/_079_Word_Search
main/java/_0051_0100/_080_Remove_Duplicates_from_Sorted_Array_II
main/java/_0051_0100/_081_Search_in_Rotated_Sorted_Array_II
main/java/_0051_0100/_082_Remove_Duplicates_from_Sorted_List_II
main/java/_0051_0100/_083_Remove_Duplicates_from_Sorted_List
main/java/_0051_0100/_084_Largest_Rectangle_in_Histogram
main/java/_0051_0100/_085_Maximal_Rectangle
main/java/_0051_0100/_086_Partition_List
main/java/_0051_0100/_087_Scramble_String
main/java/_0051_0100/_088_Merge_Sorted_Array
main/java/_0051_0100/_089_Gray_Code
main/java/_0051_0100/_090_Subsets_II
main/java/_0051_0100/_091_Decode_Ways
main/java/_0051_0100/_092_Reverse_Linked_List_II
main/java/_0051_0100/_093_Restore_IP_Addresses
main/java/_0051_0100/_094_Binary_Tree_Inorder_Traversal
main/java/_0051_0100/_095_Unique_Binary_Search_Trees_II
main/java/_0051_0100/_096_Unique_Binary_Search_Trees
main/java/_0051_0100/_097_Interleaving_String
main/java/_0051_0100/_098_Validate_Binary_Search_Tree
main/java/_0051_0100/_099_Recover_Binary_Search_Tree
main/java/_0051_0100/_100_Same_Tree
main/java/_0101_0150
main/java/_0101_0150/_101_Symmetric_Tree
main/java/_0101_0150/_102_Binary_Tree_Level_Order_Traversal
main/java/_0101_0150/_103_Binary_Tree_Zigzag_Level_Order_Traversal
main/java/_0101_0150/_104_Maximum_Depth_of_Binary_Tree
main/java/_0101_0150/_105_Construct_Binary_Tree_from_Preorder_and_Inorder_Traversal
main/java/_0101_0150/_106_Construct_Binary_Tree_from_Inorder_and_Postorder_Traversal
main/java/_0101_0150/_107_Binary_Tree_Level_Order_Traversal_II
main/java/_0101_0150/_108_Convert_Sorted_Array_to_Binary_Search_Tree
main/java/_0101_0150/_109_Convert_Sorted_List_to_Binary_Search_Tree
main/java/_0101_0150/_110_Balanced_Binary_Tree
main/java/_0101_0150/_111_Minimum_Depth_of_Binary_Tree
main/java/_0101_0150/_112_Path_Sum
main/java/_0101_0150/_113_Path_Sum_II
main/java/_0101_0150/_114_Flatten_Binary_Tree_to_Linked_List
main/java/_0101_0150/_115_Distinct_Subsequences
main/java/_0101_0150/_116_Populating_Next_Right_Pointers_in_Each_Node
main/java/_0101_0150/_117_Populating_Next_Right_Pointers_in_Each_Node_II
main/java/_0101_0150/_118_Pascals_Triangle
main/java/_0101_0150/_119_Pascals_Triangle_II
main/java/_0101_0150/_120_Triangle
main/java/_0101_0150/_121_Best_Time_to_Buy_and_Sell_Stock
main/java/_0101_0150/_122_Best_Time_to_Buy_and_Sell_Stock_II
main/java/_0101_0150/_123_Best_Time_to_Buy_and_Sell_Stock_III
main/java/_0101_0150/_124_Binary_Tree_Maximum_Path_Sum
main/java/_0101_0150/_125_Valid_Palindrome
main/java/_0101_0150/_126_Word_Ladder_II
main/java/_0101_0150/_127_Word_Ladder
main/java/_0101_0150/_128_Longest_Consecutive_Sequence
main/java/_0101_0150/_129_Sum_Root_to_Leaf_Numbers
main/java/_0101_0150/_130_Surrounded_Regions
main/java/_0101_0150/_131_Palindrome_Partitioning
main/java/_0101_0150/_132_Palindrome_Partitioning_II
main/java/_0101_0150/_133_Clone_Graph
main/java/_0101_0150/_134_Gas_Station
main/java/_0101_0150/_135_Candy
main/java/_0101_0150/_136_Single_Number
main/java/_0101_0150/_137_Single_Number_II
main/java/_0101_0150/_138_Copy_List_with_Random_Pointer
main/java/_0101_0150/_139_Word_Break
main/java/_0101_0150/_140_Word_Break_II
main/java/_0101_0150/_141_Linked_List_Cycle
main/java/_0101_0150/_142_Linked_List_Cycle_II
main/java/_0101_0150/_143_Reorder_List
main/java/_0101_0150/_144_Binary_Tree_Preorder_Traversal
main/java/_0101_0150/_145_Binary_Tree_Postorder_Traversal
main/java/_0101_0150/_146_LRU_Cache
main/java/_0101_0150/_147_Insertion_Sort_List
main/java/_0101_0150/_148_Sort_List
main/java/_0101_0150/_149_Max_Points_on_a_Line
main/java/_0101_0150/_149_Max_Points_on_a_Line/April152019
main/java/_0101_0150/_150_Evaluate_Reverse_Polish_Notation
main/java/_0151_0200
main/java/_0151_0200/_151_Reverse_Words_in_a_String
main/java/_0151_0200/_152_Maximum_Product_Subarray
main/java/_0151_0200/_153_Find_Minimum_in_Rotated_Sorted_Array
main/java/_0151_0200/_154_Find_Minimum_in_Rotated_Sorted_Array_II
main/java/_0151_0200/_155_Min_Stack
main/java/_0151_0200/_156_Binary_Tree_Upside_Down
main/java/_0151_0200/_157_Read_N_Characters_Given_Read4
main/java/_0151_0200/_158_Read_N_Characters_Given_Read4_II_Call_multiple_times
main/java/_0151_0200/_159_Longest_Substring_with_At_Most_Two_Distinct_Characters
main/java/_0151_0200/_160_Intersection_of_Two_Linked_Lists
main/java/_0151_0200/_161_One_Edit_Distance
main/java/_0151_0200/_162_Find_Peak_Element
main/java/_0151_0200/_163_Missing_Ranges
main/java/_0151_0200/_164_Maximum_Gap
main/java/_0151_0200/_165_Compare_Version_Numbers
main/java/_0151_0200/_166_Fraction_to_Recurring_Decimal
main/java/_0151_0200/_167_Two_Sum_II_Input_array_is_sorted
main/java/_0151_0200/_168_Excel_Sheet_Column_Title
main/java/_0151_0200/_169_Majority_Element
main/java/_0151_0200/_170_Two_Sum_III_Data_structure_design
main/java/_0151_0200/_171_Excel_Sheet_Column_Number
main/java/_0151_0200/_172_Factorial_Trailing_Zeroes
main/java/_0151_0200/_173_Binary_Search_Tree_Iterator
main/java/_0151_0200/_174_Dungeon_Game
main/java/_0151_0200/_175_Combine_Two_Table
main/java/_0151_0200/_176_Second_Highest_Salary
main/java/_0151_0200/_177_Nth_Highest_Salary
main/java/_0151_0200/_178_Rank_Scores
main/java/_0151_0200/_179_Largest_Number
main/java/_0151_0200/_180_Consecutive_Numbers
main/java/_0151_0200/_181_Employees_Earning_More_Than_Their_Managers
main/java/_0151_0200/_182_Duplicate_Emails
main/java/_0151_0200/_183_Customers_Who_Never_Order
main/java/_0151_0200/_184_Department_Highest_Salary
main/java/_0151_0200/_185_Department_Top_Three_Salaries
main/java/_0151_0200/_186_Reverse_Words_in_a_String_II
main/java/_0151_0200/_187_Repeated_DNA_Sequences
main/java/_0151_0200/_188_Best_Time_to_Buy_and_Sell_Stock_IV
main/java/_0151_0200/_189_Rotate_Array
main/java/_0151_0200/_190_Reverse_Bits
main/java/_0151_0200/_191_Number_of_1_Bits
main/java/_0151_0200/_192_Word_Frequency
main/java/_0151_0200/_193_Valid_Phone_Numbers
main/java/_0151_0200/_194_Transpose_File
main/java/_0151_0200/_195_Tenth_Line
main/java/_0151_0200/_196_Delete_Duplicate_Emails
main/java/_0151_0200/_197_Rising_Temperature
main/java/_0151_0200/_198_House_Robber
main/java/_0151_0200/_199_Binary_Tree_Right_Side_View
main/java/_0151_0200/_200_Number_of_Islands
main/java/_0201_0250
main/java/_0201_0250/_201_Bitwise_AND_of_Numbers_Range
main/java/_0201_0250/_202_Happy_Number
main/java/_0201_0250/_203_Remove_Linked_List_Elements
main/java/_0201_0250/_204_Count_Prime
main/java/_0201_0250/_205_Isomorphic_Strings
main/java/_0201_0250/_206_Reverse_Linked_List
main/java/_0201_0250/_207_Course_Schedule
main/java/_0201_0250/_208_Implement_Trie
main/java/_0201_0250/_209_Minimum_Size_Subarray_Sum
main/java/_0201_0250/_210_Course_Schedule_II
main/java/_0201_0250/_211_Add_and_Search_Word_Data_structure_design
main/java/_0201_0250/_212_Word_Search_II
main/java/_0201_0250/_213_House_Robber_II
main/java/_0201_0250/_214_Shortest_Palindrome
main/java/_0201_0250/_214_Shortest_Palindrome/KMP
main/java/_0201_0250/_215_Kth_Largest_Element_in_an_Array
main/java/_0201_0250/_216_Combination_Sum_III
main/java/_0201_0250/_217_Contains_Duplicate
main/java/_0201_0250/_218_The_Skyline_Problem
main/java/_0201_0250/_219_Contains_Duplicate_II
main/java/_0201_0250/_220_Contains_Duplicate_III
main/java/_0201_0250/_221_Maximal_Square
main/java/_0201_0250/_222_Count_Complete_Tree_Nodes
main/java/_0201_0250/_223_Rectangle_Area
main/java/_0201_0250/_224_Basic_Calculator
main/java/_0201_0250/_225_Implement_Stack_using_Queues
main/java/_0201_0250/_226_Invert_Binary_Tree
main/java/_0201_0250/_227_Basic_Calculator_II
main/java/_0201_0250/_228_Summary_Ranges
main/java/_0201_0250/_229_Majority_Element_II
main/java/_0201_0250/_230_Kth_Smallest_Element_in_a_BST
main/java/_0201_0250/_231_Power_of_Two
main/java/_0201_0250/_232_Implement_Queue_using_Stacks
main/java/_0201_0250/_233_Number_of_Digit_One
main/java/_0201_0250/_234_Palindrome_Linked_List
main/java/_0201_0250/_235_Lowest_Common_Ancestor_of_a_Binary_Search_Tree
main/java/_0201_0250/_236_Lowest_Common_Ancestor_of_a_Binary_Tree
main/java/_0201_0250/_237_Delete_Node_in_a_Linked_List
main/java/_0201_0250/_238_Product_of_Array_Except_Self
main/java/_0201_0250/_239_Sliding_Window_Maximum
main/java/_0201_0250/_240_Search_a_2D_Matrix_II
main/java/_0201_0250/_241_Different_Ways_to_Add_Parentheses
main/java/_0201_0250/_242_Valid_Anagram
main/java/_0201_0250/_243_Shortest_Word_Distance
main/java/_0201_0250/_244_Shortest_Word_Distance_II
main/java/_0201_0250/_245_Shortest_Word_Distance_III
main/java/_0201_0250/_246_Strobogrammatic_Number
main/java/_0201_0250/_247_Strobogrammatic_Number_II
main/java/_0201_0250/_248_Strobogrammatic_Number_III
main/java/_0201_0250/_249_Group_Shifted_Strings
main/java/_0201_0250/_250_Count_Univalue_Subtrees
main/java/_0251_0300
main/java/_0251_0300/_251_Flatten_2D_Vector
main/java/_0251_0300/_252_Meeting_Rooms
main/java/_0251_0300/_253_Meeting_Rooms_II
main/java/_0251_0300/_254_Factor_Combinations
main/java/_0251_0300/_255_Verify_Preorder_Sequence_in_Binary_Search_Tree
main/java/_0251_0300/_256_Paint_House
main/java/_0251_0300/_257_Binary_Tree_Paths
main/java/_0251_0300/_258_Add_Digits
main/java/_0251_0300/_259_3Sum_Smaller
main/java/_0251_0300/_260_Single_Number_III
main/java/_0251_0300/_261_Graph_Valid_Tree
main/java/_0251_0300/_262_Trips_and_Users
main/java/_0251_0300/_263_Ugly_Number
main/java/_0251_0300/_264_Ugly_Number_II
main/java/_0251_0300/_265_Paint_House_II
main/java/_0251_0300/_266_Palindrome_Permutation
main/java/_0251_0300/_267_Palindrome_Permutation_II
main/java/_0251_0300/_268_Missing_Number
main/java/_0251_0300/_269_Alien_Dictionary
main/java/_0251_0300/_270_Closest_Binary_Search_Tree_Value
main/java/_0251_0300/_271_Encode_and_Decode_Strings
main/java/_0251_0300/_272_Closest_Binary_Search_Tree_Value_II
main/java/_0251_0300/_273_Integer_to_English_Words
main/java/_0251_0300/_274_H_Index
main/java/_0251_0300/_275_H_Index_II
main/java/_0251_0300/_276_Paint_Fence
main/java/_0251_0300/_277_Find_the_Celebrity
main/java/_0251_0300/_278_First_Bad_Version
main/java/_0251_0300/_279_Perfect_Squares
main/java/_0251_0300/_280_Wiggle_Sort
main/java/_0251_0300/_281_Zigzag_Iterator
main/java/_0251_0300/_282_Expression_Add_Operators
main/java/_0251_0300/_283_Move_Zeroes
main/java/_0251_0300/_284_Peeking_Iterator
main/java/_0251_0300/_285_Inorder_Successor_in_BST
main/java/_0251_0300/_286_Walls_and_Gates
main/java/_0251_0300/_287_Find_the_Duplicate_Number
main/java/_0251_0300/_288_Unique_Word_Abbreviation
main/java/_0251_0300/_289_Game_of_Life
main/java/_0251_0300/_290_Word_Pattern
main/java/_0251_0300/_291_Word_Pattern_II
main/java/_0251_0300/_292_Nim_Game
main/java/_0251_0300/_293_Flip_Game
main/java/_0251_0300/_294_Flip_Game_II
main/java/_0251_0300/_295_Find_Median_from_Data_Stream
main/java/_0251_0300/_296_Best_Meeting_Point
main/java/_0251_0300/_297_Serialize_and_Deserialize_Binary_Tree
main/java/_0251_0300/_298_Binary_Tree_Longest_Consecutive_Sequence
main/java/_0251_0300/_299_Bulls_and_Cows
main/java/_0251_0300/_300_Longest_Increasing_Subsequence
main/java/_0301_0350
main/java/_0301_0350/_301_Remove_Invalid_Parentheses
main/java/_0301_0350/_302_Smallest_Rectangle_Enclosing_Black_Pixels
main/java/_0301_0350/_303_Range_Sum_Query_Immutable
main/java/_0301_0350/_304_Range_Sum_Query_2D_Immutable
main/java/_0301_0350/_305_Number_of_Islands_II
main/java/_0301_0350/_306_Additive_Number
main/java/_0301_0350/_307_Range_Sum_Query_Mutable
main/java/_0301_0350/_308_Range_Sum_Query_2D_Mutable
main/java/_0301_0350/_309_Best_Time_to_Buy_and_Sell_Stock_withCool_down
main/java/_0301_0350/_310_Minimum_Height_Trees
main/java/_0301_0350/_311_Sparse_Matrix_Multiplication
main/java/_0301_0350/_312_Burst_Balloons
main/java/_0301_0350/_313_Super_Ugly_Number
main/java/_0301_0350/_314_Binary_Tree_Vertical_Order_Traversal
main/java/_0301_0350/_315_Count_of_Smaller_Numbers_After_Self
main/java/_0301_0350/_316_Remove_Duplicate_Letters
main/java/_0301_0350/_317_Shortest_Distance_from_All_Buildings
main/java/_0301_0350/_318_Maximum_Product_of_Word_Lengths
main/java/_0301_0350/_319_Bulb_Switcher
main/java/_0301_0350/_320_Generalized_Abbreviation
main/java/_0301_0350/_321_Create_Maximum_Number
main/java/_0301_0350/_322_Coin_Change
main/java/_0301_0350/_323_Number_of_Connected_Components_in_an_Undirected_Graph
main/java/_0301_0350/_324_Wiggle_Sort_II
main/java/_0301_0350/_325_Maximum_Size_Subarray_Sum_Equals_k
main/java/_0301_0350/_326_Power_of_Three
main/java/_0301_0350/_327_Count_of_Range_Sum
main/java/_0301_0350/_328_Odd_Even_Linked_List
main/java/_0301_0350/_329_Longest_Increasing_Path_in_a_Matrix
main/java/_0301_0350/_330_Patching_Array
main/java/_0301_0350/_331_Verify_Preorder_Serialization_of_a_Binary_Tree
main/java/_0301_0350/_332_Reconstruct_Itinerary
main/java/_0301_0350/_333_Largest_BST_Subtree
main/java/_0301_0350/_334_Increasing_Triplet_Subsequence
main/java/_0301_0350/_335_Self_Crossing
main/java/_0301_0350/_336_Palindrome_Pairs
main/java/_0301_0350/_337_House_Robber_III
main/java/_0301_0350/_338_Counting_Bits
main/java/_0301_0350/_339_Nested_List_Weight_Sum
main/java/_0301_0350/_340_Longest_Substring_with_At_Most_K_Distinct_Characters
main/java/_0301_0350/_341_Flatten_Nested_List_Iterator
main/java/_0301_0350/_342_Power_of_Four
main/java/_0301_0350/_343_Integer_Break
main/java/_0301_0350/_344_Reverse_String
main/java/_0301_0350/_345_Reverse_Vowels_of_a_String
main/java/_0301_0350/_346_Moving_Average_from_Data_Stream
main/java/_0301_0350/_347_Top_K_Frequent_Elements
main/java/_0301_0350/_348_Design_Tic_Tac_Toe
main/java/_0301_0350/_349_Intersection_of_Two_Arrays
main/java/_0301_0350/_350_Intersection_of_Two_Arrays_II
main/java/_0351_0400
main/java/_0351_0400/_351_Android_Unlock_Patterns
main/java/_0351_0400/_352_Data_Stream_as_Disjoint_Intervals
main/java/_0351_0400/_353_Design_Snake_Game
main/java/_0351_0400/_354_Russian_Doll_Envelopes
main/java/_0351_0400/_355_Design_Twitter
main/java/_0351_0400/_356_Line_Reflection
main/java/_0351_0400/_357_Count_Numbers_with_Unique_Digits
main/java/_0351_0400/_358_Rearrange_String_k_Distance_Apart
main/java/_0351_0400/_359_Logger_Rate_Limiter
main/java/_0351_0400/_360_Sort_Transformed_Array
main/java/_0351_0400/_361_Bomb_Enemy
main/java/_0351_0400/_362_Design_Hit_Counter
main/java/_0351_0400/_363_Max_Sum_of_Rectangle_No_Larger_Than_K
main/java/_0351_0400/_364_Nested_List_Weight_Sum_II
main/java/_0351_0400/_365_Water_and_Jug_Problem
main/java/_0351_0400/_366_Find_Leaves_of_Binary_Tree
main/java/_0351_0400/_367_Valid_Perfect_Square
main/java/_0351_0400/_368_Largest_Divisible_Subset
main/java/_0351_0400/_369_Plus_One_Linked_List
main/java/_0351_0400/_370_Range_Addition
main/java/_0351_0400/_371_Sum_of_Two_Integers
main/java/_0351_0400/_372_Super_Pow
main/java/_0351_0400/_373_Find_K_Pairs_with_Smallest_Sums
main/java/_0351_0400/_374_Guess_Number_Higher_or_Lower
main/java/_0351_0400/_375_Guess_Number_Higher_or_Lower_II
main/java/_0351_0400/_376_Wiggle_Subsequence
main/java/_0351_0400/_377_Combination_Sum_IV
main/java/_0351_0400/_378_Kth_Smallest_Element_in_a_Sorted_Matrix
main/java/_0351_0400/_379_Design_Phone_Directory
main/java/_0351_0400/_380_Insert_Delete_GetRandom_O_1
main/java/_0351_0400/_381_Insert_Delete_GetRandom_O_1_Duplicates_allowed
main/java/_0351_0400/_382_Linked_List_Random_Node
main/java/_0351_0400/_383_Ransom_Note
main/java/_0351_0400/_384_Shuffle_an_Array
main/java/_0351_0400/_385_Mini_Parser
main/java/_0351_0400/_386_Lexicographical_Numbers
main/java/_0351_0400/_387_First_Unique_Character_in_a_String
main/java/_0351_0400/_388_Longest_Absolute_File_Path
main/java/_0351_0400/_389_Find_the_Difference
main/java/_0351_0400/_390_Elimination_Game
main/java/_0351_0400/_391_Perfect_Rectangle
main/java/_0351_0400/_392_Is_Subsequence
main/java/_0351_0400/_393_UTF_8_Validation
main/java/_0351_0400/_394_Decode_String
main/java/_0351_0400/_395_Longest_Substring_with_At_Least_K_Repeating_Characters
main/java/_0351_0400/_396_Rotate_Function
main/java/_0351_0400/_397_Integer_Replacement
main/java/_0351_0400/_398_Random_Pick_Index
main/java/_0351_0400/_399_Evaluate_Division
main/java/_0351_0400/_400_Nth_Digit
main/java/_0401_0450
main/java/_0401_0450/_401_Binary_Watch
main/java/_0401_0450/_402_Remove_K_Digits
main/java/_0401_0450/_403_Frog_Jump
main/java/_0401_0450/_404_Sum_of_Left_Leaves
main/java/_0401_0450/_405_Convert_a_Number_to_Hexadecimal
main/java/_0401_0450/_406_Queue_Reconstruction_by_Height
main/java/_0401_0450/_407_Trapping_Rain_Water_II
main/java/_0401_0450/_408_Valid_Word_Abbreviation
main/java/_0401_0450/_409_Longest_Palindrome
main/java/_0401_0450/_410_Split_Array_Largest_Sum
main/java/_0401_0450/_411_Minimum_Unique_Word_Abbreviation
main/java/_0401_0450/_412_Fizz_Buzz
main/java/_0401_0450/_413_Arithmetic_Slices
main/java/_0401_0450/_414_Third_Maximum_Number
main/java/_0401_0450/_415_Add_Strings
main/java/_0401_0450/_416_Partition_Equal_Subset_Sum
main/java/_0401_0450/_417_Pacific_Atlantic_Water_Flow
main/java/_0401_0450/_418_Sentence_Screen_Fitting
main/java/_0401_0450/_419_Battleships_in_a_Board
main/java/_0401_0450/_420_Strong_Password_Checker
main/java/_0401_0450/_421_Maximum_XOR_of_Two_Numbers_in_an_Array
main/java/_0401_0450/_422_Valid_Word_Square
main/java/_0401_0450/_423_Reconstruct_Original_Digits_from_English
main/java/_0401_0450/_424_Longest_Repeating_Character_Replacement
main/java/_0401_0450/_425_Word_Squares
main/java/_0401_0450/_426_Convert_Binary_Search_Tree_to_Sorted_Doubly_Linked_List
main/java/_0401_0450/_427_Construct_Quad_Tree
main/java/_0401_0450/_428_Serialize_and_Deserialize_N_ary_Tree
main/java/_0401_0450/_429_N_ary_Tree_Level_Order_Traversal
main/java/_0401_0450/_430_Flatten_a_Multilevel_Doubly_Linked_List
main/java/_0401_0450/_431_Encode_N_ary_Tree_to_Binary_Tree
main/java/_0401_0450/_432_All_O_one_Data_Structure
main/java/_0401_0450/_433_Minimum_Genetic_Mutation
main/java/_0401_0450/_434_Number_of_Segments_in_a_String
main/java/_0401_0450/_435_Non_overlapping_Intervals
main/java/_0401_0450/_436_Find_Right_Interval
main/java/_0401_0450/_437_Path_Sum_III
main/java/_0401_0450/_438_Find_All_Anagrams_in_a_String
main/java/_0401_0450/_439_Ternary_Expression_Parser
main/java/_0401_0450/_440_K_th_Smallest_in_Lexicographical_Order
main/java/_0401_0450/_441_Arranging_Coins
main/java/_0401_0450/_442_Find_All_Duplicates_in_an_Array
main/java/_0401_0450/_443_String_Compression
main/java/_0401_0450/_444_Sequence_Reconstruction
main/java/_0401_0450/_445_Add_Two_Numbers_II
main/java/_0401_0450/_446_Arithmetic_Slices_II_Subsequence
main/java/_0401_0450/_447_Number_of_Boomerangs
main/java/_0401_0450/_448_Find_All_Numbers_Disappeared_in_an_Array
main/java/_0401_0450/_449_Serialize_and_Deserialize_BST
main/java/_0401_0450/_450_Delete_Node_in_a_BST
main/java/_0451_0500
main/java/_0451_0500/_451_Sort_Characters_By_Frequency
main/java/_0451_0500/_452_Minimum_Number_of_Arrows_to_Burst_Balloons
main/java/_0451_0500/_453_Minimum_Moves_to_Equal_Array_Elements
main/java/_0451_0500/_454_4Sum_II
main/java/_0451_0500/_455_Assign_Cookies
main/java/_0451_0500/_456_132_Pattern
main/java/_0451_0500/_457_Circular_Array_Loop
main/java/_0451_0500/_458_Poor_Pigs
main/java/_0451_0500/_459_Repeated_Substring_Pattern
main/java/_0451_0500/_460_LFU_Cache
main/java/_0451_0500/_461_Hamming_Distance
main/java/_0451_0500/_462_Minimum_Moves_to_Equal_Array_Elements_II
main/java/_0451_0500/_463_Island_Perimeter
main/java/_0451_0500/_464_Can_I_Win
main/java/_0451_0500/_465_Optimal_Account_Balancing
main/java/_0451_0500/_466_Count_The_Repetitions
main/java/_0451_0500/_467_Unique_Substrings_in_Wraparound_String
main/java/_0451_0500/_468_Validate_IP_Address
main/java/_0451_0500/_469_Convex_Polygon
main/java/_0451_0500/_470_Implement_Rand10_Using_Rand7
main/java/_0451_0500/_471_Encode_String_with_Shortest_Length
main/java/_0451_0500/_472_Concatenated_Words
main/java/_0451_0500/_473_Matchsticks_to_Square
main/java/_0451_0500/_474_Ones_and_Zeroes
main/java/_0451_0500/_475_Heaters
main/java/_0451_0500/_476_Number_Complement
main/java/_0451_0500/_477_Total_Hamming_Distance
main/java/_0451_0500/_478_Generate_Random_Point_in_a_Circle
main/java/_0451_0500/_479_Largest_Palindrome_Product
main/java/_0451_0500/_480_Sliding_Window_Median
main/java/_0451_0500/_481_Magical_String
main/java/_0451_0500/_482_License_Key_Formatting
main/java/_0451_0500/_483_Smallest_Good_Base
main/java/_0451_0500/_484_Find_Permutation
main/java/_0451_0500/_485_Max_Consecutive_Ones
main/java/_0451_0500/_486_Predict_the_Winner
main/java/_0451_0500/_487_Max_Consecutive_Ones_II
main/java/_0451_0500/_488_Zuma_Game
main/java/_0451_0500/_489_Robot_Room_Cleaner
main/java/_0451_0500/_490_The_Maze
main/java/_0451_0500/_491_Increasing_Subsequences
main/java/_0451_0500/_492_Construct_the_Rectangle
main/java/_0451_0500/_493_Reverse_Pairs
main/java/_0451_0500/_494_Target_Sum
main/java/_0451_0500/_495_Teemo_Attacking
main/java/_0451_0500/_496_Next_Greater_Element_I
main/java/_0451_0500/_497_Random_Point_in_Non_overlapping_Rectangles
main/java/_0451_0500/_498_Diagonal_Traverse
main/java/_0451_0500/_499_The_Maze_III
main/java/_0451_0500/_500_Keyboard_Row
main/java/_0501_0550
main/java/_0501_0550/_501_Find_Mode_in_Binary_Search_Tree
main/java/_0501_0550/_502_IPO
main/java/_0501_0550/_503_Next_Greater_Element_II
main/java/_0501_0550/_504_Base_7
main/java/_0501_0550/_505_The_Maze_II
main/java/_0501_0550/_506_Relative_Ranks
main/java/_0501_0550/_507_Perfect_Number
main/java/_0501_0550/_508_Most_Frequent_Subtree_Sum
main/java/_0501_0550/_509_Fibonacci_Number
main/java/_0501_0550/_510_Inorder_Successor_in_BST_II
main/java/_0501_0550/_513_Find_Bottom_Left_Tree_Value
main/java/_0501_0550/_514_Freedom_Trail
main/java/_0501_0550/_515_Find_Largest_Value_in_Each_Tree_Row
main/java/_0501_0550/_516_Longest_Palindromic_Subsequence
main/java/_0501_0550/_517_Super_Washing_Machines
main/java/_0501_0550/_518_Coin_Change_2
main/java/_0501_0550/_519_Random_Flip_Matrix
main/java/_0501_0550/_520_Detect_Capital
main/java/_0501_0550/_521_Longest_Uncommon_Subsequence_I
main/java/_0501_0550/_522_Longest_Uncommon_Subsequence_II
main/java/_0501_0550/_523_Continuous_Subarray_Sum
main/java/_0501_0550/_524_Longest_Word_in_Dictionary_through_Deleting
main/java/_0501_0550/_525_Contiguous_Array
main/java/_0501_0550/_526_Beautiful_Arrangement
main/java/_0501_0550/_527_Word_Abbreviation
main/java/_0501_0550/_528_Random_Pick_with_Weight
main/java/_0501_0550/_529_Minesweeper
main/java/_0501_0550/_530_Minimum_Absolute_Difference_in_BST
main/java/_0501_0550/_531_Lonely_Pixel_I
main/java/_0501_0550/_532_K_diff_Pairs_in_an_Array
main/java/_0501_0550/_533_Lonely_Pixel_II
main/java/_0501_0550/_535_Encode_and_Decode_TinyURL
main/java/_0501_0550/_536_Construct_Binary_Tree_from_String
main/java/_0501_0550/_537_Complex_Number_Multiplication
main/java/_0501_0550/_538_Convert_BST_to_Greater_Tree
main/java/_0501_0550/_539_Minimum_Time_Difference
main/java/_0501_0550/_540_Single_Element_in_a_Sorted_Array
main/java/_0501_0550/_541_Reverse_String_II
main/java/_0501_0550/_542_01_Matrix
main/java/_0501_0550/_543_Diameter_of_Binary_Tree
main/java/_0501_0550/_544_Output_Contest_Matches
main/java/_0501_0550/_545_Boundary_of_Binary_Tree
main/java/_0501_0550/_546_Remove_Boxes
main/java/_0501_0550/_547_Friend_Circles
main/java/_0501_0550/_548_Split_Array_with_Equal_Sum
main/java/_0501_0550/_549_Binary_Tree_Longest_Consecutive_Sequence_II
main/java/_0551_0600
main/java/_0551_0600/_551_Student_Attendance_Record_I
main/java/_0551_0600/_552_Student_Attendance_Record_II
main/java/_0551_0600/_553_Optimal_Division
main/java/_0551_0600/_554_Brick_Wall
main/java/_0551_0600/_555_Split_Concatenated_Strings
main/java/_0551_0600/_556_Next_Greater_Element_III
main/java/_0551_0600/_557_Reverse_Words_in_a_String_III
main/java/_0551_0600/_558_Logical_OR_of_Two_Binary_Grids_Represented_as_Quad_Trees
main/java/_0551_0600/_559_Maximum_Depth_of_N_ary_Tree
main/java/_0551_0600/_560_Subarray_Sum_Equals_K
main/java/_0551_0600/_561_Array_Partition_I
main/java/_0551_0600/_562_Longest_Line_of_Consecutive_One_in_Matrix
main/java/_0551_0600/_563_Binary_Tree_Tilt
main/java/_0551_0600/_564_Find_the_Closest_Palindrome
main/java/_0551_0600/_565_Array_Nesting
main/java/_0551_0600/_566_Reshape_the_Matrix
main/java/_0551_0600/_567_Permutation_in_String
main/java/_0551_0600/_568_Maximum_Vacation_Days
main/java/_0551_0600/_572_Subtree_of_Another_Tree
main/java/_0551_0600/_573_Squirrel_Simulation
main/java/_0551_0600/_575_Distribute_Candies
main/java/_0551_0600/_576_Out_of_Boundary_Paths
main/java/_0551_0600/_581_Shortest_Unsorted_Continuous_Subarray
main/java/_0551_0600/_582_Kill_Process
main/java/_0551_0600/_583_Delete_Operation_for_Two_Strings
main/java/_0551_0600/_587_Erect_the_Fence
main/java/_0551_0600/_588_Design_In_Memory_File_System
main/java/_0551_0600/_589_N_ary_Tree_Preorder_Traversal
main/java/_0551_0600/_590_N_ary_Tree_Postorder_Traversal
main/java/_0551_0600/_591_Tag_Validator
main/java/_0551_0600/_592_Fraction_Addition_and_Subtraction
main/java/_0551_0600/_593_Valid_Square
main/java/_0551_0600/_594_Longest_Harmonious_Subsequence
main/java/_0551_0600/_598_Range_Addition_II
main/java/_0551_0600/_599_Minimum_Index_Sum_of_Two_Lists
main/java/_0551_0600/_600_Non_negative_Integers_without_Consecutive_Ones
main/java/_0601_0650
main/java/_0601_0650/_604_Design_Compressed_String_Iterator
main/java/_0601_0650/_605_Can_Place_Flowers
main/java/_0601_0650/_606_Construct_String_from_Binary_Tree
main/java/_0601_0650/_611_Valid_Triangle_Number
main/java/_0601_0650/_616_Add_Bold_Tag_in_String
main/java/_0601_0650/_617_Merge_Two_Binary_Trees
main/java/_0601_0650/_621_Task_Scheduler
main/java/_0601_0650/_622_Design_Circular_Queue
main/java/_0601_0650/_623_Add_One_Row_to_Tree
main/java/_0601_0650/_624_Maximum_Distance_in_Arrays
main/java/_0601_0650/_625_Minimum_Factorization
main/java/_0601_0650/_628_Maximum_Product_of_Three_Numbers
main/java/_0601_0650/_629_K_Inverse_Pairs_Array
main/java/_0601_0650/_630_Course_Schedule_III
main/java/_0601_0650/_631_Design_Excel_Sum_Formula
main/java/_0601_0650/_632_Smallest_Range
main/java/_0601_0650/_633_Sum_of_Square_Numbers
main/java/_0601_0650/_634_Find_the_Derangement_of_An_Array
main/java/_0601_0650/_635_Design_Log_Storage_System
main/java/_0601_0650/_636_Exclusive_Time_of_Functions
main/java/_0601_0650/_637_Average_of_Levels_in_Binary_Tree
main/java/_0601_0650/_638_Shopping_Offers
main/java/_0601_0650/_639_Decode_Ways_II
main/java/_0601_0650/_640_Solve_the_Equation
main/java/_0601_0650/_641_Design_Circular_Deque
main/java/_0601_0650/_642_Design_Search_Autocomplete_System
main/java/_0601_0650/_643_Maximum_Average_Subarray_I
main/java/_0601_0650/_644_Maximum_Average_Subarray_II
main/java/_0601_0650/_645_Set_Mismatch
main/java/_0601_0650/_646_Maximum_Length_of_Pair_Chain
main/java/_0601_0650/_647_Palindromic_Substrings
main/java/_0601_0650/_648_Replace_Words
main/java/_0601_0650/_649_Dota2_Senate
main/java/_0601_0650/_650_2_Keys_Keyboard
main/java/_0651_0700
main/java/_0651_0700/_651_4_Keys_Keyboard
main/java/_0651_0700/_652_Find_Duplicate_Subtrees
main/java/_0651_0700/_653_Two_Sum_IV_Input_is_a_BST
main/java/_0651_0700/_654_Maximum_Binary_Tree
main/java/_0651_0700/_655_Print_Binary_Tree
main/java/_0651_0700/_656_Coin_Path
main/java/_0651_0700/_657_Judge_Route_Circle
main/java/_0651_0700/_658_Find_K_Closest_Elements
main/java/_0651_0700/_659_Split_Array_into_Consecutive_Subsequences
main/java/_0651_0700/_660_Remove_9
main/java/_0651_0700/_661_Image_Smoother
main/java/_0651_0700/_662_Maximum_Width_of_Binary_Tree
main/java/_0651_0700/_663_Equal_Tree_Partition
main/java/_0651_0700/_664_Strange_Printer
main/java/_0651_0700/_665_Non_decreasing_Array
main/java/_0651_0700/_666_Path_Sum_IV
main/java/_0651_0700/_667_Beautiful_Arrangement_II
main/java/_0651_0700/_668_Kth_Smallest_Number_in_Multiplication_Table
main/java/_0651_0700/_669_Trim_a_Binary_Search_Tree
main/java/_0651_0700/_670_Maximum_Swap
main/java/_0651_0700/_671_Second_Minimum_Node_In_a_Binary_Tree
main/java/_0651_0700/_672_Bulb_Switcher_II
main/java/_0651_0700/_673_Number_of_Longest_Increasing_Subsequence
main/java/_0651_0700/_674_Longest_Continuous_Increasing_Subsequence
main/java/_0651_0700/_675_Cut_Off_Trees_for_Golf_Event
main/java/_0651_0700/_676_Implement_Magic_Dictionary
main/java/_0651_0700/_677_Map_Sum_Pairs
main/java/_0651_0700/_678_Valid_Parenthesis_String
main/java/_0651_0700/_679_24_Game
main/java/_0651_0700/_680_Valid_Palindrome_II
main/java/_0651_0700/_681_Next_Closest_Time
main/java/_0651_0700/_682_Baseball_Game
main/java/_0651_0700/_683_K_Empty_Slots
main/java/_0651_0700/_684_Redundant_Connection
main/java/_0651_0700/_685_Redundant_Connection_II
main/java/_0651_0700/_687_Longest_Univalue_Path
main/java/_0651_0700/_688_Knight_Probability_in_Chessboard
main/java/_0651_0700/_689_Maximum_Sum_of_3_Non_Overlapping_Subarrays
main/java/_0651_0700/_690_Employee_Importance
main/java/_0651_0700/_691_Stickers_to_Spell_Word
main/java/_0651_0700/_692_Top_K_Frequent_Words
main/java/_0651_0700/_693_Binary_Number_with_Alternating_Bits
main/java/_0651_0700/_695_Max_Area_of_Island
main/java/_0651_0700/_696_Count_Binary_Substrings
main/java/_0651_0700/_697_Degree_of_an_Array
main/java/_0651_0700/_698_Partition_to_K_Equal_Sum_Subsets
main/java/_0651_0700/_699_Falling_Squares
main/java/_0651_0700/_700_Search_in_a_Binary_Search_Tree
main/java/_0701_0750
main/java/_0701_0750/_701_Insert_into_a_Binary_Search_Tree
main/java/_0701_0750/_702_Search_in_a_Sorted_Array_of_Unknown_Size
main/java/_0701_0750/_703_Kth_Largest_Element_in_a_Stream
main/java/_0701_0750/_704_Binary_Search
main/java/_0701_0750/_705_Design_HashSet
main/java/_0701_0750/_707_Design_Linked_List
main/java/_0701_0750/_708_Insert_into_a_Cyclic_Sorted_List
main/java/_0701_0750/_709_To_Lower_Case
main/java/_0701_0750/_710_Random_Pick_with_Blacklist
main/java/_0701_0750/_711_Number_of_Distinct_Islands_II
main/java/_0701_0750/_712_Minimum_ASCII_Delete_Sum_for_Two_Strings
main/java/_0701_0750/_713_Subarray_Product_Less_Than_K
main/java/_0701_0750/_714_Best_Time_to_Buy_and_Sell_Stock_with_Transaction_Fee
main/java/_0701_0750/_715_Range_Module
main/java/_0701_0750/_716_Max_Stack
main/java/_0701_0750/_717_1_bit_and_2_bit_Characters
main/java/_0701_0750/_718_Maximum_Length_of_Repeated_Subarray
main/java/_0701_0750/_719_Find_K_th_Smallest_Pair_Distance
main/java/_0701_0750/_720_Longest_Word_in_Dictionary
main/java/_0701_0750/_721_Accounts_Merge
main/java/_0701_0750/_722_Remove_Comments
main/java/_0701_0750/_723_Candy_Crush
main/java/_0701_0750/_724_Find_Pivot_Index
main/java/_0701_0750/_725_Split_Linked_List_in_Parts
main/java/_0701_0750/_726_Number_of_Atoms
main/java/_0701_0750/_727_Minimum_Window_Subsequence
main/java/_0701_0750/_728_Self_Dividing_Numbers
main/java/_0701_0750/_729_My_Calendar_I
main/java/_0701_0750/_730_Count_Different_Palindromic_Subsequences
main/java/_0701_0750/_731_My_Calendar_II
main/java/_0701_0750/_732_My_Calendar_III
main/java/_0701_0750/_733_Flood_Fill
main/java/_0701_0750/_734_Sentence_Similarity
main/java/_0701_0750/_735_Asteroid_Collision
main/java/_0701_0750/_736_Parse_Lisp_Expression
main/java/_0701_0750/_737_Sentence_Similarity_II
main/java/_0701_0750/_738_Monotone_Increasing_Digits
main/java/_0701_0750/_739_Daily_Temperatures
main/java/_0701_0750/_740_Delete_and_Earn
main/java/_0701_0750/_741_Cherry_Pickup
main/java/_0701_0750/_742_Closest_Leaf_in_a_Binary_Tree
main/java/_0701_0750/_743_Network_Delay_Time
main/java/_0701_0750/_744_Find_Smallest_Letter_Greater_Than_Target
main/java/_0701_0750/_745_Prefix_and_Suffix_Search
main/java/_0701_0750/_746_Min_Cost_Climbing_Stairs
main/java/_0701_0750/_747_Largest_Number_At_Least_Twice_of_Others
main/java/_0701_0750/_748_Shortest_Completing_Word
main/java/_0701_0750/_749_Contain_Virus
main/java/_0701_0750/_750_Number_Of_Corner_Rectangles
main/java/_0751_0800
main/java/_0751_0800/_751_IP_to_CIDR
main/java/_0751_0800/_752_Open_the_Lock
main/java/_0751_0800/_753_Cracking_the_Safe
main/java/_0751_0800/_754_Reach_a_Number
main/java/_0751_0800/_755_Pour_Water
main/java/_0751_0800/_756_Pyramid_Transition_Matrix
main/java/_0751_0800/_757_Set_Intersection_Size_At_Least_Two
main/java/_0751_0800/_759_Employee_Free_Time
main/java/_0751_0800/_760_Find_Anagram_Mappings
main/java/_0751_0800/_761_Special_Binary_String
main/java/_0751_0800/_762_Prime_Number_of_Set_Bits_in_Binary_Representation
main/java/_0751_0800/_763_Partition_Labels
main/java/_0751_0800/_764_Largest_Plus_Sign
main/java/_0751_0800/_765_Couples_Holding_Hands
main/java/_0751_0800/_767_Reorganize_String
main/java/_0751_0800/_770_Basic_Calculator_IV
main/java/_0751_0800/_772_Basic_Calculator_III
main/java/_0751_0800/_773_Sliding_Puzzle
main/java/_0751_0800/_774_Minimize_Max_Distance_to_Gas_Station
main/java/_0751_0800/_775_Global_and_Local_Inversions
main/java/_0751_0800/_776_Split_BST
main/java/_0751_0800/_777_Swap_Adjacent_in_LR_String
main/java/_0751_0800/_778_Swim_in_Rising_Water
main/java/_0751_0800/_779_K_th_Symbol_in_Grammar
main/java/_0751_0800/_780_Reaching_Points
main/java/_0751_0800/_781_Rabbits_in_Forest
main/java/_0751_0800/_782_Transform_to_Chessboard
main/java/_0751_0800/_783_Minimum_Distance_Between_BST_Nodes
main/java/_0751_0800/_784_Letter_Case_Permutation
main/java/_0751_0800/_785_Is_Graph_Bipartite
main/java/_0751_0800/_786_K_th_Smallest_Prime_Fraction
main/java/_0751_0800/_787_Cheapest_Flights_Within_K_Stops
main/java/_0751_0800/_788_Rotated_Digits
main/java/_0751_0800/_789_Escape_The_Ghosts
main/java/_0751_0800/_790_Domino_and_Tromino_Tiling
main/java/_0751_0800/_791_Custom_Sort_String
main/java/_0751_0800/_792_Number_of_Matching_Subsequences
main/java/_0751_0800/_793_Preimage_Size_of_Factorial_Zeroes_Function
main/java/_0751_0800/_794_Valid_Tic_Tac_Toe_State
main/java/_0751_0800/_795_Number_of_Subarrays_with_Bounded_Maximum
main/java/_0751_0800/_796_Rotate_String
main/java/_0751_0800/_797_All_Paths_From_Source_to_Target
main/java/_0751_0800/_798_Smallest_Rotation_with_Highest_Score
main/java/_0751_0800/_799_Champagne_Tower
main/java/_0751_0800/_800_Similar_RGB_Color
main/java/_0801_0850
main/java/_0801_0850/_801_Minimum_Swaps_To_Make_Sequences_Increasing
main/java/_0801_0850/_802_Find_Eventual_Safe_States
main/java/_0801_0850/_803_Bricks_Falling_When_Hit
main/java/_0801_0850/_804_Unique_Morse_Code_Words
main/java/_0801_0850/_805_Split_Array_With_Same_Average
main/java/_0801_0850/_806_Number_of_Lines_To_Write_String
main/java/_0801_0850/_807_Max_Increase_to_Keep_City_Skyline
main/java/_0801_0850/_808_Soup_Servings
main/java/_0801_0850/_809_Expressive_Words
main/java/_0801_0850/_810_Chalkboard_XOR_Game
main/java/_0801_0850/_811_Subdomain_Visit_Count
main/java/_0801_0850/_812_Largest_Triangle_Area
main/java/_0801_0850/_813_Largest_Sum_of_Averages
main/java/_0801_0850/_814_Binary_Tree_Pruning
main/java/_0801_0850/_815_Bus_Routes
main/java/_0801_0850/_816_Ambiguous_Coordinates
main/java/_0801_0850/_817_Linked_List_Components
main/java/_0801_0850/_818_Race_Car
main/java/_0801_0850/_819_Most_Common_Word
main/java/_0801_0850/_820_Short_Encoding_of_Words
main/java/_0801_0850/_821_Shortest_Distance_to_a_Character
main/java/_0801_0850/_822_Card_Flipping_Game
main/java/_0801_0850/_823_Binary_Trees_With_Factors
main/java/_0801_0850/_824_Goat_Latin
main/java/_0801_0850/_825_Friends_Of_Appropriate_Ages
main/java/_0801_0850/_826_Most_Profit_Assigning_Work
main/java/_0801_0850/_827_Making_A_Large_Island
main/java/_0801_0850/_828_Unique_Letter_String
main/java/_0801_0850/_829_Consecutive_Numbers_Sum
main/java/_0801_0850/_830_Positions_of_Large_Groups
main/java/_0801_0850/_831_Masking_Personal_Information
main/java/_0801_0850/_832_Flipping_an_Image
main/java/_0801_0850/_833_Find_And_Replace_in_String
main/java/_0801_0850/_834_Sum_of_Distances_in_Tree
main/java/_0801_0850/_835_Image_Overlap
main/java/_0801_0850/_836_Rectangle_Overlap
main/java/_0801_0850/_837_New_21_Game
main/java/_0801_0850/_838_Push_Dominoes
main/java/_0801_0850/_839_Similar_String_Groups
main/java/_0801_0850/_840_Magic_Squares_In_Grid
main/java/_0801_0850/_841_Keys_and_Rooms
main/java/_0801_0850/_842_Split_Array_into_Fibonacci_Sequence
main/java/_0801_0850/_843_Guess_the_Word
main/java/_0801_0850/_844_Backspace_String_Compare
main/java/_0801_0850/_845_Longest_Mountain_in_Array
main/java/_0801_0850/_846_Hand_of_Straights
main/java/_0851_0900
main/java/_0851_0900/_853_Car_Fleet
main/java/_0851_0900/_854_K_Similar_Strings
main/java/_0851_0900/_855_Exam_Room
main/java/_0851_0900/_858_Mirror_Reflection
main/java/_0851_0900/_859_Buddy_Strings
main/java/_0851_0900/_863_All_Nodes_Distance_K_in_Binary_Tree
main/java/_0851_0900/_864_Shortest_Path_to_Get_All_Key
main/java/_0851_0900/_865_Smallest_Subtree_with_all_the_Deepest_Node
main/java/_0851_0900/_871_Minimum_Number_of_Refueling_Stops
main/java/_0851_0900/_876_Middle_of_the_Linked_List
main/java/_0851_0900/_879_Profitable_Schemes
main/java/_0851_0900/_885_Boats_to_Save_People
main/java/_0851_0900/_886_Possible_Bipartition
main/java/_0851_0900/_889_Construct_Binary_Tree_from_Preorder_and_Postorder_Traversal
main/java/_0851_0900/_890_Find_and_Replace_Pattern
main/java/_0851_0900/_892_Surface_Area_of_3D_Shapes
main/java/_0851_0900/_893_Groups_of_Special_Equivalent_Strings
main/java/_0851_0900/_894_All_Possible_Full_Binary_Trees
main/java/_0851_0900/_895_Maximum_Frequency_Stack
main/java/_0851_0900/_896_Monotonic_Array
main/java/_0851_0900/_897_Increasing_Order_Search_Tree
main/java/_0851_0900/_898_Bitwise_ORs_of_Subarrays
main/java/_0851_0900/_899_Orderly_Queue
main/java/_0851_0900/_900_RLE_Iterator
main/java/_0901_0950
main/java/_0901_0950/_901_Online_Stock_Span
main/java/_0901_0950/_904_Fruit_Into_Baskets
main/java/_0901_0950/_907_Sum_of_Subarray_Minimums
main/java/_0901_0950/_909_Snakes_and_Ladders
main/java/_0901_0950/_911_Online_Election
main/java/_0901_0950/_913_Cat_and_Mouse
main/java/_0901_0950/_914_X_of_a_Kind_in_a_Deck_of_Cards
main/java/_0901_0950/_918_Maximum_Sum_Circular_Subarray
main/java/_0901_0950/_920_Number_of_Music_Playlists
main/java/_0901_0950/_926_Flip_String_to_Monotone_Increasing
main/java/_0901_0950/_929_Unique_Email_Addresses
main/java/_0901_0950/_933_Number_of_Recent_Calls
main/java/_0901_0950/_934_Shortest_Bridge
main/java/_0901_0950/_936_Stamping_The_Sequence
main/java/_0901_0950/_939_Minimum_Area_Rectangle
main/java/_0901_0950/_943_Find_the_Shortest_Superstring
main/java/_0901_0950/_946_Validate_Stack_Sequences
main/java/_0901_0950/_947_Most_Stones_Removed_with_Same_Row_or_Column
main/java/_0901_0950/_949_Largest_Time_for_Given_Digits
main/java/_0951_1000
main/java/_0951_1000/_1000_Minimum_Cost_to_Merge_Stones
main/java/_0951_1000/_951_Flip_Equivalent_Binary_Trees
main/java/_0951_1000/_958_Check_Completeness_of_a_Binary_Tree
main/java/_0951_1000/_959_Regions_Cut_By_Slashes
main/java/_0951_1000/_963_Minimum_Area_Rectangle_II
main/java/_0951_1000/_965_Univalued_Binary_Tree
main/java/_0951_1000/_969_Pancake_Sorting
main/java/_0951_1000/_970_Powerful_Integers
main/java/_0951_1000/_972_Equal_Rational_Numbers
main/java/_0951_1000/_973_K_Closest_Points_to_Origin
main/java/_0951_1000/_975_Odd_Even_Jump
main/java/_0951_1000/_977_Squares_of_a_Sorted_Array
main/java/_0951_1000/_981_Time_Based_Key_Value_Store
main/java/_0951_1000/_982_Triples_with_Bitwise_AND_Equal_To_Zero
main/java/_0951_1000/_983_Minimum_Cost_For_Tickets
main/java/_0951_1000/_984_String_Without_AAA_or_BBB
main/java/_0951_1000/_986_Interval_List_Intersections
main/java/_0951_1000/_992_Subarrays_with_K_Different_Integers
main/java/_0951_1000/_993_Cousins_in_Binary_Tree
main/java/_0951_1000/_994_Rotting_Oranges
main/java/_0951_1000/_997_Find_the_Town_Judge
main/java/_0951_1000/_998_Maximum_Binary_Tree_II
main/java/_0951_1000/_999_Available_Captures_for_Rook
main/java/_1001_1050
main/java/_1001_1050/_1001_Grid_Illumination
main/java/_1001_1050/_1005_Maximize_Sum_Of_Array_After_K_Negations
main/java/_1001_1050/_1006_Clumsy_Factorial
main/java/_1001_1050/_1007_Minimum_Domino_Rotations_For_Equal_Row
main/java/_1001_1050/_1008_Construct_Binary_Search_Tree_from_Preorder_Traversal
main/java/_1001_1050/_1011_Capacity_To_Ship_Packages_Within_D_Days
main/java/_1001_1050/_1012_Complement_of_Base_10_Integer
main/java/_1001_1050/_1013_Pairs_of_Songs_With_Total_Durations_Divisible_by_60
main/java/_1001_1050/_1014_Capacity_To_Ship_Packages_Within_D_Days
main/java/_1001_1050/_1015_Numbers_With_1_Repeated_Digit
main/java/_1001_1050/_1020_Partition_Array_Into_Three_Parts_With_Equal_Sum
main/java/_1001_1050/_1021_Best_Sightseeing_Pair
main/java/_1001_1050/_1022_Smallest_Integer_Divisible_by_K
main/java/_1001_1050/_1023_Binary_String_With_Substrings_Representing_1_To_N
main/java/_1001_1050/_1028_Recover_a_Tree_From_Preorder_Traversal
main/java/_1001_1050/_1029_Two_City_Scheduling
main/java/_1001_1050/_1032_Stream_of_Characters
main/java/_1001_1050/_1033_Moving_Stones_Until_Consecutive
main/java/_1001_1050/_1034_Coloring_A_Border
main/java/_1001_1050/_1035_Uncrossed_Lines
main/java/_1001_1050/_1036_Escape_a_Large_Maze
main/java/_1001_1050/_1041_Robot_Bounded_In_Circle
main/java/_1001_1050/_1044_Longest_Duplicate_Substring
main/java/_1001_1050/_1046_Last_Stone_Weight
main/java/_1001_1050/_1048_Longest_String_Chain
main/java/_1001_1050/_1049_Last_Stone_Weight_II
main/java/_1051_1100
main/java/_1051_1100/_1055_Shortest_Way_to_Form_String
main/java/_1051_1100/_1056_Confusing_Number
main/java/_1051_1100/_1057_Campus_Bikes
main/java/_1051_1100/_1063_Number_of_Valid_Subarrays
main/java/_1051_1100/_1066_Campus_Bikes_II
main/java/_1051_1100/_1074_Number_of_Submatrices_That_Sum_to_Target
main/java/_1051_1100/_1087_Brace_Expansion
main/java/_1051_1100/_1088_Confusing_Number_II
main/java/_1051_1100/_1091_Shortest_Path_in_Binary_Matrix
main/java/_1051_1100/_1096_Brace_Expansion_II
main/java/_1101_1150
main/java/_1101_1150/_1107_New_Users_Daily_Count
main/java/_1101_1150/_1110_Delete_Nodes_And_Return_Forest
main/java/_1101_1150/_1114_Print_in_Order
main/java/_1101_1150/_1115_Print_FooBar_Alternately
main/java/_1101_1150/_1116_Print_Zero_Even_Odd
main/java/_1101_1150/_1117_Building_H2O
main/java/_1101_1150/_1127_User_Purchase_Platform
main/java/_1101_1150/_1143_Longest_Common_Subsequence
main/java/_1101_1150/_1145_Binary_Tree_Coloring_Game
main/java/_1101_1150/_1146_Snapshot_Array
main/java/_1101_1150/_1148_Article_Views_I
main/java/_1101_1150/_1149_Article_Views_II
main/java/_1151_1200
main/java/_1151_1200/_1153_String_Transforms_Into_Another_String
main/java/_1151_1200/_1170_Compare_Strings_by_Frequency_of_the_Smallest_Character
main/java/_1151_1200/_1172_Dinner_Plate_Stacks
main/java/_1151_1200/_1178_Number_of_Valid_Words_for_Each_Puzzle
main/java/_1151_1200/_1188_Design_Bounded_Blocking_Queue
main/java/_1151_1200/_1189_Maximum_Number_of_Balloons
main/java/_1151_1200/_1191_K_Concatenation_Maximum_Sum
main/java/_1151_1200/_1192_Critical_Connections_in_a_Network
main/java/_1151_1200/_1195_Fizz_Buzz_Multithreaded
main/java/_1151_1200/_1200_Minimum_Absolute_Difference
main/java/_1201_1250
main/java/_1201_1250/_1201_Ugly_Number_III
main/java/_1201_1250/_1202_Smallest_String_With_Swaps
main/java/_1201_1250/_1203_Sort_Items_by_Groups_Respecting_Dependencies
main/java/_1201_1250/_1206_Design_Skiplist
main/java/_1201_1250/_1226_The_Dining_Philosophers
main/java/_1201_1250/_1231_Divide_Chocolate
main/java/_1201_1250/_1232_Check_If_It_Is_a_Straight_Line
main/java/_1201_1250/_1242_Web_Crawler_Multithreaded
main/java/_1251_1300
main/java/_1251_1300/_1262_Greatest_Sum_Divisible_by_Three
main/java/_1251_1300/_1268_Search_Suggestions_System
main/java/_1251_1300/_1277_Count_Square_Submatrices_with_All_Ones
main/java/_1251_1300/_1279_Traffic_Light_Controlled_Intersection
main/java/_1301_1350
main/java/_1301_1350/_1305_All_Elements_in_Two_Binary_Search_Trees
main/java/_1301_1350/_1339_Maximum_Product_of_Splitted_Binary_Tree
main/java/_1301_1350/_1340_Jump_Game_V
main/java/_1301_1350/_1346_Check_If_N_and_Its_Double_Exist
main/java/_1301_1350/_1347_Minimum_Number_of_Steps_to_Make_Two_Strings_Anagram
main/java/_1301_1350/_1348_Tweet_Counts_Per_Frequency
main/java/_1301_1350/_1349_Maximum_Students_Taking_Exam
main/java/_1351_1400
main/java/_1351_1400/_1351_Count_Negative_Numbers_in_a_Sorted_Matrix
main/java/_1351_1400/_1352_Product_of_the_Last_K_Numbers
main/java/_1351_1400/_1353_Maximum_Number_of_Events_That_Can_Be_Attended
main/java/_1351_1400/_1354_Construct_Target_Array_With_Multiple_Sums
main/java/_1351_1400/_1363_Largest_Multiple_of_Three
main/java/_1351_1400/_1367_Linked_List_in_Binary_Tree
main/java/_1351_1400/_1372_Longest_ZigZag_Path_in_a_Binary_Tree
main/java/_1351_1400/_1373_Maximum_Sum_BST_in_Binary_Tree
main/java/_1351_1400/_1380_Lucky_Numbers_in_a_Matrix
main/java/_1351_1400/_1381_Design_a_Stack_With_Increment_Operation
main/java/_1351_1400/_1382_Balance_a_Binary_Search_Tree
main/java/_1351_1400/_1383_Maximum_Performance_of_a_Team
main/java/_1351_1400/_1388_Pizza_With_3n_Slices
main/java/_1351_1400/_1389_Create_Target_Array_in_the_Given_Order
main/java/_1351_1400/_1390_Four_Divisors
main/java/_1351_1400/_1391_Check_if_There_is_a_Valid_Path_in_a_Grid
main/java/_1351_1400/_1392_Longest_Happy_Prefix
main/java/_1351_1400/_1394_Find_Lucky_Integer_in_an_Array
main/java/_1351_1400/_1395_Count_Number_of_Teams
main/java/_1351_1400/_1396_Design_Underground_System
main/java/_1351_1400/_1397_Find_All_Good_Strings
main/java/_1401_1450
main/java/_1401_1450/_1402_Reducing_Dishes
main/java/_1401_1450/_1403_Minimum_Subsequence_in_Non_Increasing_Order
main/java/_1401_1450/_1404_Number_of_Steps_to_Reduce_a_Number_in_Binary_Representation_to_One
main/java/_1401_1450/_1405_Longest_Happy_String
main/java/_1401_1450/_1406_Stone_Game_III
main/java/_1401_1450/_1408_String_Matching_in_an_Array
main/java/_1401_1450/_1409_Queries_on_a_Permutation_With_Key
main/java/_1401_1450/_1410_HTML_Entity_Parser
main/java/_1401_1450/_1411_Number_of_Ways_to_Paint_N_3_Grid
main/java/_1401_1450/_1416_Restore_The_Array
main/java/_1401_1450/_1417_Reformat_The_String
main/java/_1401_1450/_1418_Display_Table_of_Food_Orders_in_a_Restaurant
main/java/_1401_1450/_1419_Minimum_Number_of_Frogs_Croaking
main/java/_1401_1450/_1420_Build_Array_Where_You_Can_Find_The_Maximum_Exactly_K_Comparisons
main/java/_1401_1450/_1422_Maximum_Score_After_Splitting_a_String
main/java/_1401_1450/_1423_Maximum_Points_You_Can_Obtain_from_Cards
main/java/_1401_1450/_1424_Diagonal_Traverse_II
main/java/_1401_1450/_1425_Constrained_Subset_Sum
main/java/_1401_1450/_1426_Counting_Elements
main/java/_1401_1450/_1428_Leftmost_Column_with_at_Least_a_One
main/java/_1401_1450/_1429_First_Unique_Number
main/java/_1401_1450/_1436_Destination_City
main/java/_1401_1450/_1437_Check_If_All_1s_Are_at_Least_Length_K_Places_Away
main/java/_1401_1450/_1438_Longest_Continuous_Subarray_With_Absolute_Diff_Less_Than_or_Equal_to_Limit
main/java/_1401_1450/_1439_Find_the_Kth_Smallest_Sum_of_a_Matrix_With_Sorted_Rows
main/java/_1401_1450/_1441_Build_an_Array_With_Stack_Operations
main/java/_1401_1450/_1442_Count_Triplets_That_Can_Form_Two_Arrays_of_Equal_XOR
main/java/_1401_1450/_1443_Minimum_Time_to_Collect_All_Apples_in_a_Tree
main/java/_1401_1450/_1444_Number_of_Ways_of_Cutting_a_Pizza
main/java/_1401_1450/_1450_Number_of_Students_Doing_Homework_at_a_Given_Time
main/java/_1451_1500
main/java/_1451_1500/_1451_Rearrange_Words_in_a_Sentence
main/java/_1451_1500/_1452_People_Whose_List_of_Favorite_Companies_Is_Not_a_Subset_of_Another_List
main/java/_1451_1500/_1453_Maximum_Number_of_Darts_Inside_of_a_Circular_Dartboard
main/resources
main/resources/_1001_1050._1011_Capacity_To_Ship_Packages_Within_D_Days
main/resources/_1151_1200
main/resources/_1151_1200/_1178_Number_of_Valid_Words_for_Each_Puzzle
main/resources/_169_Majority_Element
main/resources/_181_Employees_Earning_More_Than_Their_Managers
main/resources/_351_Android_Unlock_Patterns
main/java/_1001_1050
main/java/_1051_1100
main/java/_1101_1150
main/java/_1151_1200
main/java/_1201_1250
main/java/_0801_0850
main/java/_0851_0900
main/java/_0901_0950
main/java/_0951_1000
main/java/_0801_0850/_847_Shortest_Path_Visiting_All_Nodes
main/java/_0801_0850/_848_Shifting_Letters
main/java/_0801_0850/_849_Maximize_Distance_to_Closest_Person
main/java/_0801_0850/_850_Rectangle_Area_II
main/java/_0851_0900/_851_Loud_and_Rich
main/java/_0851_0900/_852_Peak_Index_in_a_Mountain_Array
main/java/_0851_0900/_853_Car_Fleet
main/java/_0851_0900/_854_K-Similar_Strings
main/java/_0851_0900/_855_Exam_Room
main/java/_0851_0900/_856_Score_of_Parentheses
main/java/_0851_0900/_857_Minimum_Cost_to_Hire_K_Workers
main/java/_0851_0900/_858_Mirror_Reflection
main/java/_0851_0900/_859_Buddy_Strings
main/java/_0851_0900/_860_Lemonade_Change
main/java/_0851_0900/_861_Score_After_Flipping_Matrix
main/java/_0851_0900/_862_Shortest_Subarray_with_Sum_at_Least_K
main/java/_0851_0900/_863_All_Nodes_Distance_K_in_Binary_Tree
main/java/_0851_0900/_864_Shortest_Path_to_Get_All_Keys
main/java/_0851_0900/_865_Smallest_Subtree_with_all_the_Deepest_Nodes
main/java/_0851_0900/_866_Prime_Palindrome
main/java/_0851_0900/_867_Transpose_Matrix
main/java/_0851_0900/_868_Binary_Gap
main/java/_0851_0900/_869_Reordered_Power_of_2
main/java/_0851_0900/_870_Advantage_Shuffle
main/java/_0851_0900/_871_Minimum_Number_of_Refueling_Stops
main/java/_0851_0900/_872_Leaf-Similar_Trees
main/java/_0851_0900/_873_Length_of_Longest_Fibonacci_Subsequence
main/java/_0851_0900/_874_Walking_Robot_Simulation
main/java/_0851_0900/_875_Koko_Eating_Bananas
main/java/_0851_0900/_876_Middle_of_the_Linked_List
main/java/_0851_0900/_877_Stone_Game
main/java/_0851_0900/_878_Nth_Magical_Number
main/java/_0851_0900/_879_Profitable_Schemes
main/java/_0851_0900/_880_Decoded_String_at_Index
main/java/_0851_0900/_881_Boats_to_Save_People
main/java/_0851_0900/_882_Reachable_Nodes_In_Subdivided_Graph
main/java/_0851_0900/_883_Projection_Area_of_3D_Shapes
main/java/_0851_0900/_884_Uncommon_Words_from_Two_Sentences
main/java/_0851_0900/_885_Spiral_Matrix_III
main/java/_0851_0900/_886_Possible_Bipartition
main/java/_0851_0900/_887_Super_Egg_Drop
main/java/_0851_0900/_888_Fair_Candy_Swap
main/java/_0851_0900/_889_Construct_Binary_Tree_from_Preorder_and_Postorder_Traversal
main/java/_0851_0900/_890_Find_and_Replace_Pattern
main/java/_0851_0900/_891_Sum_of_Subsequence_Widths
main/java/_0851_0900/_892_Surface_Area_of_3D_Shapes
main/java/_0851_0900/_893_Groups_of_Special-Equivalent_Strings
main/java/_0851_0900/_894_All_Possible_Full_Binary_Trees
main/java/_0851_0900/_895_Maximum_Frequency_Stack
main/java/_0851_0900/_896_Monotonic_Array
main/java/_0851_0900/_897_Increasing_Order_Search_Tree
main/java/_0851_0900/_898_Bitwise_ORs_of_Subarrays
main/java/_0851_0900/_899_Orderly_Queue
main/java/_0851_0900/_900_RLE_Iterator
main/java/_0901_0950/_901_Online_Stock_Span
main/java/_0901_0950/_902_Numbers_At_Most_N_Given_Digit_Set
main/java/_0901_0950/_903_Valid_Permutations_for_DI_Sequence
main/java/_0901_0950/_904_Fruit_Into_Baskets
main/java/_0901_0950/_905_Sort_Array_By_Parity
main/java/_0901_0950/_906_Super_Palindromes
main/java/_0901_0950/_907_Sum_of_Subarray_Minimums
main/java/_0901_0950/_908_Smallest_Range_I
main/java/_0901_0950/_909_Snakes_and_Ladders
main/java/_0901_0950/_910_Smallest_Range_II
main/java/_0901_0950/_911_Online_Election
main/java/_0901_0950/_912_Sort_an_Array
main/java/_0901_0950/_913_Cat_and_Mouse
main/java/_0901_0950/_914_X_of_a_Kind_in_a_Deck_of_Cards
main/java/_0901_0950/_915_Partition_Array_into_Disjoint_Intervals
main/java/_0901_0950/_916_Word_Subsets
main/java/_0901_0950/_917_Reverse_Only_Letters
main/java/_0901_0950/_918_Maximum_Sum_Circular_Subarray
main/java/_0901_0950/_919_Complete_Binary_Tree_Inserter
main/java/_0901_0950/_920_Number_of_Music_Playlists
main/java/_0901_0950/_921_Minimum_Add_to_Make_Parentheses_Valid
main/java/_0901_0950/_922_Sort_Array_By_Parity_II
main/java/_0901_0950/_923_3Sum_With_Multiplicity
main/java/_0901_0950/_924_Minimize_Malware_Spread
main/java/_0901_0950/_925_Long_Pressed_Name
main/java/_0901_0950/_926_Flip_String_to_Monotone_Increasing
main/java/_0901_0950/_927_Three_Equal_Parts
main/java/_0901_0950/_928_Minimize_Malware_Spread_II
main/java/_0901_0950/_929_Unique_Email_Addresses
main/java/_0901_0950/_930_Binary_Subarrays_With_Sum
main/java/_0901_0950/_931_Minimum_Falling_Path_Sum
main/java/_0901_0950/_932_Beautiful_Array
main/java/_0901_0950/_933_Number_of_Recent_Calls
main/java/_0901_0950/_934_Shortest_Bridge
main/java/_0901_0950/_935_Knight_Dialer
main/java/_0901_0950/_936_Stamping_The_Sequence
main/java/_0901_0950/_937_Reorder_Data_in_Log_Files
main/java/_0901_0950/_938_Range_Sum_of_BST
main/java/_0901_0950/_939_Minimum_Area_Rectangle
main/java/_0901_0950/_940_Distinct_Subsequences_II
main/java/_0901_0950/_941_Valid_Mountain_Array
main/java/_0901_0950/_942_DI_String_Match
main/java/_0901_0950/_943_Find_the_Shortest_Superstring
main/java/_0901_0950/_944_Delete_Columns_to_Make_Sorted
main/java/_0901_0950/_945_Minimum_Increment_to_Make_Array_Unique
main/java/_0901_0950/_946_Validate_Stack_Sequences
main/java/_0901_0950/_947_Most_Stones_Removed_with_Same_Row_or_Column
main/java/_0901_0950/_948_Bag_of_Tokens
main/java/_0901_0950/_949_Largest_Time_for_Given_Digits
main/java/_0901_0950/_950_Reveal_Cards_In_Increasing_Order
main/java/_0951_1000
main/java/_0951_1000/_951_Flip_Equivalent_Binary_Trees
main/java/_0951_1000/_952_Largest_Component_Size_by_Common_Factor
main/java/_0951_1000/_953_Verifying_an_Alien_Dictionary
main/java/_0951_1000/_954_Array_of_Doubled_Pairs
main/java/_0951_1000/_955_Delete_Columns_to_Make_Sorted_II
main/java/_0951_1000/_956_Tallest_Billboard
main/java/_0951_1000/_957_Prison_Cells_After_N_Days
main/java/_0951_1000/_958_Check_Completeness_of_a_Binary_Tree
main/java/_0951_1000/_959_Regions_Cut_By_Slashes
main/java/_0951_1000/_960_Delete_Columns_to_Make_Sorted_III
main/java/_0951_1000/_961_N-Repeated_Element_in_Size_2N_Array
main/java/_0951_1000/_962_Maximum_Width_Ramp
main/java/_0951_1000/_963_Minimum_Area_Rectangle_II
main/java/_0951_1000/_964_Least_Operators_to_Express_Number
main/java/_0951_1000/_965_Univalued_Binary_Tree
main/java/_0951_1000/_966_Vowel_Spellchecker
main/java/_0951_1000/_967_Numbers_With_Same_Consecutive_Differences
main/java/_0951_1000/_968_Binary_Tree_Cameras
main/java/_0951_1000/_969_Pancake_Sorting
main/java/_0951_1000/_970_Powerful_Integers
main/java/_0951_1000/_971_Flip_Binary_Tree_To_Match_Preorder_Traversal
main/java/_0951_1000/_972_Equal_Rational_Numbers
main/java/_0951_1000/_973_K_Closest_Points_to_Origin
main/java/_0951_1000/_974_Subarray_Sums_Divisible_by_K
main/java/_0951_1000/_975_Odd_Even_Jump
main/java/_0951_1000/_976_Largest_Perimeter_Triangle
main/java/_0951_1000/_977_Squares_of_a_Sorted_Array
main/java/_0951_1000/_978_Longest_Turbulent_Subarray
main/java/_0951_1000/_979_Distribute_Coins_in_Binary_Tree
main/java/_0951_1000/_980_Unique_Paths_III
main/java/_0951_1000/_981_Time_Based_Key-Value_Store
main/java/_0951_1000/_982_Triples_with_Bitwise_AND_Equal_To_Zero
main/java/_0951_1000/_983_Minimum_Cost_For_Tickets
main/java/_0951_1000/_984_String_Without_AAA_or_BBB
main/java/_0951_1000/_985_Sum_of_Even_Numbers_After_Queries
main/java/_0951_1000/_986_Interval_List_Intersections
main/java/_0951_1000/_987_Vertical_Order_Traversal_of_a_Binary_Tree
main/java/_0951_1000/_988_Smallest_String_Starting_From_Leaf
main/java/_0951_1000/_989_Add_to_Array-Form_of_Integer
main/java/_0951_1000/_990_Satisfiability_of_Equality_Equations
main/java/_0951_1000/_991_Broken_Calculator
main/java/_0951_1000/_992_Subarrays_with_K_Different_Integers
main/java/_0951_1000/_993_Cousins_in_Binary_Tree
main/java/_0951_1000/_994_Rotting_Oranges
main/java/_0951_1000/_995_Minimum_Number_of_K_Consecutive_Bit_Flips
main/java/_0951_1000/_996_Number_of_Squareful_Arrays
main/java/_0951_1000/_997_Find_the_Town_Judge
main/java/_0951_1000/_998_Maximum_Binary_Tree_II
main/java/_0951_1000/_999_Available_Captures_for_Rook
main/java/_0951_1000/_1000_Minimum_Cost_to_Merge_Stones
main/java/_1001_1050
main/java/_1001_1050/_1001_Grid_Illumination
main/java/_1001_1050/_1002_Find_Common_Characters
main/java/_1001_1050/_1003_Check_If_Word_Is_Valid_After_Substitutions
main/java/_1001_1050/_1004_Max_Consecutive_Ones_III
main/java/_1001_1050/_1005_Maximize_Sum_Of_Array_After_K_Negations
main/java/_1001_1050/_1006_Clumsy_Factorial
main/java/_1001_1050/_1007_Minimum_Domino_Rotations_For_Equal_Row
main/java/_1001_1050/_1008_Construct_Binary_Search_Tree_from_Preorder_Traversal
main/java/_1001_1050/_1009_Complement_of_Base_10_Integer
main/java/_1001_1050/_1010_Pairs_of_Songs_With_Total_Durations_Divisible_by_60
main/java/_1001_1050/_1011_Capacity_To_Ship_Packages_Within_D_Days
main/java/_1001_1050/_1012_Numbers_With_Repeated_Digits
main/java/_1001_1050/_1013_Partition_Array_Into_Three_Parts_With_Equal_Sum
main/java/_1001_1050/_1014_Best_Sightseeing_Pair
main/java/_1001_1050/_1015_Smallest_Integer_Divisible_by_K
main/java/_1001_1050/_1016_Binary_String_With_Substrings_Representing_1_To_N
main/java/_1001_1050/_1017_Convert_to_Base_-2
main/java/_1001_1050/_1018_Binary_Prefix_Divisible_By_5
main/java/_1001_1050/_1019_Next_Greater_Node_In_Linked_List
main/java/_1001_1050/_1020_Number_of_Enclaves
main/java/_1001_1050/_1021_Remove_Outermost_Parentheses
main/java/_1001_1050/_1022_Sum_of_Root_To_Leaf_Binary_Numbers
main/java/_1001_1050/_1023_Camelcase_Matching
main/java/_1001_1050/_1024_Video_Stitching
main/java/_1001_1050/_1025_Divisor_Game
main/java/_1001_1050/_1026_Maximum_Difference_Between_Node_and_Ancestor
main/java/_1001_1050/_1027_Longest_Arithmetic_Subsequence
main/java/_1001_1050/_1028_Recover_a_Tree_From_Preorder_Traversal
main/java/_1001_1050/_1029_Two_City_Scheduling
main/java/_1001_1050/_1030_Matrix_Cells_in_Distance_Order
main/java/_1001_1050/_1031_Maximum_Sum_of_Two_Non-Overlapping_Subarrays
main/java/_1001_1050/_1032_Stream_of_Characters
main/java/_1001_1050/_1033_Moving_Stones_Until_Consecutive
main/java/_1001_1050/_1034_Coloring_A_Border
main/java/_1001_1050/_1035_Uncrossed_Lines
main/java/_1001_1050/_1036_Escape_a_Large_Maze
main/java/_1001_1050/_1037_Valid_Boomerang
main/java/_1001_1050/_1038_Binary_Search_Tree_to_Greater_Sum_Tree
main/java/_1001_1050/_1039_Minimum_Score_Triangulation_of_Polygon
main/java/_1001_1050/_1040_Moving_Stones_Until_Consecutive_II
main/java/_1001_1050/_1041_Robot_Bounded_In_Circle
main/java/_1001_1050/_1042_Flower_Planting_With_No_Adjacent
main/java/_1001_1050/_1043_Partition_Array_for_Maximum_Sum
main/java/_1001_1050/_1044_Longest_Duplicate_Substring
main/java/_1001_1050/_1046_Last_Stone_Weight
main/java/_1001_1050/_1047_Remove_All_Adjacent_Duplicates_In_String
main/java/_1001_1050/_1048_Longest_String_Chain
main/java/_1001_1050/_1049_Last_Stone_Weight_II
main/java/_1051_1100
main/java/_1051_1100/_1051_Height_Checker
main/java/_1051_1100/_1052_Grumpy_Bookstore_Owner
main/java/_1051_1100/_1053_Previous_Permutation_With_One_Swap
main/java/_1051_1100/_1054_Distant_Barcodes
main/java/_1051_1100/_1055_Shortest_Way_to_Form_String
main/java/_1051_1100/_1056_Confusing_Number
main/java/_1051_1100/_1057_Campus_Bikes
main/java/_1051_1100/_1058_Minimize_Rounding_Error_to_Meet_Target
main/java/_1051_1100/_1059_All_Paths_from_Source_Lead_to_Destination
main/java/_1051_1100/_1060_Missing_Element_in_Sorted_Array
main/java/_1051_1100/_1061_Lexicographically_Smallest_Equivalent_String
main/java/_1051_1100/_1062_Longest_Repeating_Substring
main/java/_1051_1100/_1063_Number_of_Valid_Subarrays
main/java/_1051_1100/_1064_Fixed_Point
main/java/_1051_1100/_1065_Index_Pairs_of_a_String
main/java/_1051_1100/_1066_Campus_Bikes_II
main/java/_1051_1100/_1067_Digit_Count_in_Range
main/java/_1051_1100/_1071_Greatest_Common_Divisor_of_Strings
main/java/_1051_1100/_1072_Flip_Columns_For_Maximum_Number_of_Equal_Rows
main/java/_1051_1100/_1073_Adding_Two_Negabinary_Numbers
main/java/_1051_1100/_1074_Number_of_Submatrices_That_Sum_to_Target
main/java/_1051_1100/_1078_Occurrences_After_Bigram
main/java/_1051_1100/_1079_Letter_Tile_Possibilities
main/java/_1051_1100/_1080_Insufficient_Nodes_in_Root_to_Leaf_Paths
main/java/_1051_1100/_1081_Smallest_Subsequence_of_Distinct_Characters
main/java/_1051_1100/_1085_Sum_of_Digits_in_the_Minimum_Number
main/java/_1051_1100/_1086_High_Five
main/java/_1051_1100/_1087_Brace_Expansion
main/java/_1051_1100/_1088_Confusing_Number_II
main/java/_1051_1100/_1089_Duplicate_Zeros
main/java/_1051_1100/_1090_Largest_Values_From_Labels
main/java/_1051_1100/_1091_Shortest_Path_in_Binary_Matrix
main/java/_1051_1100/_1092_Shortest_Common_Supersequence
main/java/_1051_1100/_1093_Statistics_from_a_Large_Sample
main/java/_1051_1100/_1094_Car_Pooling
main/java/_1051_1100/_1095_Find_in_Mountain_Array
main/java/_1051_1100/_1096_Brace_Expansion_II
main/java/_1051_1100/_1099_Two_Sum_Less_Than_K
main/java/_1051_1100/_1100_Find_K-Length_Substrings_With_No_Repeated_Characters
main/java/_1101_1150
main/java/_1101_1150/_1101_The_Earliest_Moment_When_Everyone_Become_Friends
main/java/_1101_1150/_1102_Path_With_Maximum_Minimum_Value
main/java/_1101_1150/_1103_Distribute_Candies_to_People
main/java/_1101_1150/_1104_Path_In_Zigzag_Labelled_Binary_Tree
main/java/_1101_1150/_1105_Filling_Bookcase_Shelves
main/java/_1101_1150/_1106_Parsing_A_Boolean_Expression
main/java/_1101_1150/_1108_Defanging_an_IP_Address
main/java/_1101_1150/_1109_Corporate_Flight_Bookings
main/java/_1101_1150/_1110_Delete_Nodes_And_Return_Forest
main/java/_1101_1150/_1111_Maximum_Nesting_Depth_of_Two_Valid_Parentheses_Strings
main/java/_1101_1150/_1118_Number_of_Days_in_a_Month
main/java/_1101_1150/_1119_Remove_Vowels_from_a_String
main/java/_1101_1150/_1120_Maximum_Average_Subtree
main/java/_1101_1150/_1121_Divide_Array_Into_Increasing_Sequences
main/java/_1101_1150/_1122_Relative_Sort_Array
main/java/_1101_1150/_1123_Lowest_Common_Ancestor_of_Deepest_Leaves
main/java/_1101_1150/_1124_Longest_Well-Performing_Interval
main/java/_1101_1150/_1125_Smallest_Sufficient_Team
main/java/_1101_1150/_1128_Number_of_Equivalent_Domino_Pairs
main/java/_1101_1150/_1129_Shortest_Path_with_Alternating_Colors
main/java/_1101_1150/_1130_Minimum_Cost_Tree_From_Leaf_Values
main/java/_1101_1150/_1131_Maximum_of_Absolute_Value_Expression
main/java/_1101_1150/_1133_Largest_Unique_Number
main/java/_1101_1150/_1134_Armstrong_Number
main/java/_1101_1150/_1135_Connecting_Cities_With_Minimum_Cost
main/java/_1101_1150/_1136_Parallel_Courses
main/java/_1101_1150/_1137_N-th_Tribonacci_Number
main/java/_1101_1150/_1138_Alphabet_Board_Path
main/java/_1101_1150/_1139_Largest_1-Bordered_Square
main/java/_1101_1150/_1140_Stone_Game_II
main/java/_1101_1150/_1143_Longest_Common_Subsequence
main/java/_1101_1150/_1144_Decrease_Elements_To_Make_Array_Zigzag
main/java/_1101_1150/_1145_Binary_Tree_Coloring_Game
main/java/_1101_1150/_1146_Snapshot_Array
main/java/_1101_1150/_1147_Longest_Chunked_Palindrome_Decomposition
main/java/_1101_1150/_1150_Check_If_a_Number_Is_Majority_Element_in_a_Sorted_Array
main/java/_1151_1200
main/java/_1151_1200/_1151_Minimum_Swaps_to_Group_All_1's_Together
main/java/_1151_1200/_1152_Analyze_User_Website_Visit_Pattern
main/java/_1151_1200/_1153_String_Transforms_Into_Another_String
main/java/_1151_1200/_1154_Day_of_the_Year
main/java/_1151_1200/_1155_Number_of_Dice_Rolls_With_Target_Sum
main/java/_1151_1200/_1156_Swap_For_Longest_Repeated_Character_Substring
main/java/_1151_1200/_1157_Online_Majority_Element_In_Subarray
main/java/_1151_1200/_1160_Find_Words_That_Can_Be_Formed_by_Characters
main/java/_1151_1200/_1161_Maximum_Level_Sum_of_a_Binary_Tree
main/java/_1151_1200/_1162_As_Far_from_Land_as_Possible
main/java/_1151_1200/_1163_Last_Substring_in_Lexicographical_Order
main/java/_1151_1200/_1165_Single-Row_Keyboard
main/java/_1151_1200/_1166_Design_File_System
main/java/_1151_1200/_1167_Minimum_Cost_to_Connect_Sticks
main/java/_1151_1200/_1168_Optimize_Water_Distribution_in_a_Village
main/java/_1151_1200/_1169_Invalid_Transactions
main/java/_1151_1200/_1170_Compare_Strings_by_Frequency_of_the_Smallest_Character
main/java/_1151_1200/_1171_Remove_Zero_Sum_Consecutive_Nodes_from_Linked_List
main/java/_1151_1200/_1172_Dinner_Plate_Stacks
main/java/_1151_1200/_1175_Prime_Arrangements
main/java/_1151_1200/_1176_Diet_Plan_Performance
main/java/_1151_1200/_1177_Can_Make_Palindrome_from_Substring
main/java/_1151_1200/_1178_Number_of_Valid_Words_for_Each_Puzzle
main/java/_1151_1200/_1180_Count_Substrings_with_Only_One_Distinct_Letter
main/java/_1151_1200/_1181_Before_and_After_Puzzle
main/java/_1151_1200/_1182_Shortest_Distance_to_Target_Color
main/java/_1151_1200/_1183_Maximum_Number_of_Ones
main/java/_1151_1200/_1184_Distance_Between_Bus_Stops
main/java/_1151_1200/_1185_Day_of_the_Week
main/java/_1151_1200/_1186_Maximum_Subarray_Sum_with_One_Deletion
main/java/_1151_1200/_1187_Make_Array_Strictly_Increasing
main/java/_1151_1200/_1189_Maximum_Number_of_Balloons
main/java/_1151_1200/_1190_Reverse_Substrings_Between_Each_Pair_of_Parentheses
main/java/_1151_1200/_1191_K-Concatenation_Maximum_Sum
main/java/_1151_1200/_1192_Critical_Connections_in_a_Network
main/java/_1151_1200/_1196_How_Many_Apples_Can_You_Put_into_the_Basket
main/java/_1151_1200/_1197_Minimum_Knight_Moves
main/java/_1151_1200/_1198_Find_Smallest_Common_Element_in_All_Rows
main/java/_1151_1200/_1199_Minimum_Time_to_Build_Blocks
main/java/_1151_1200/_1200_Minimum_Absolute_Difference
main/java/_1201_1250
main/java/_1201_1250/_1201_Ugly_Number_III
main/java/_1201_1250/_1202_Smallest_String_With_Swaps
main/java/_1201_1250/_1203_Sort_Items_by_Groups_Respecting_Dependencies
main/java/_1201_1250/_1206_Design_Skiplist
main/java/_1201_1250/_1207_Unique_Number_of_Occurrences
main/java/_1201_1250/_1208_Get_Equal_Substrings_Within_Budget
main/java/_1201_1250/_1209_Remove_All_Adjacent_Duplicates_in_String_II
main/java/_1201_1250/_1210_Minimum_Moves_to_Reach_Target_with_Rotations
main/java/_1201_1250/_1213_Intersection_of_Three_Sorted_Arrays
main/java/_1201_1250/_1214_Two_Sum_BSTs
main/java/_1201_1250/_1215_Stepping_Numbers
main/java/_1201_1250/_1216_Valid_Palindrome_III
main/java/_1201_1250/_1217_Minimum_Cost_to_Move_Chips_to_The_Same_Position
main/java/_1201_1250/_1218_Longest_Arithmetic_Subsequence_of_Given_Difference
main/java/_1201_1250/_1219_Path_with_Maximum_Gold
main/java/_1201_1250/_1220_Count_Vowels_Permutation
main/java/_1201_1250/_1221_Split_a_String_in_Balanced_Strings
main/java/_1201_1250/_1222_Queens_That_Can_Attack_the_King
main/java/_1201_1250/_1223_Dice_Roll_Simulation
main/java/_1201_1250/_1224_Maximum_Equal_Frequency
main/java/_1201_1250/_1227_Airplane_Seat_Assignment_Probability
main/java/_1201_1250/_1228_Missing_Number_In_Arithmetic_Progression
main/java/_1201_1250/_1229_Meeting_Scheduler
main/java/_1201_1250/_1230_Toss_Strange_Coins
main/java/_1201_1250/_1231_Divide_Chocolate
main/java/_1201_1250/_1232_Check_If_It_Is_a_Straight_Line
main/java/_1201_1250/_1233_Remove_Sub-Folders_from_the_Filesystem
main/java/_1201_1250/_1234_Replace_the_Substring_for_Balanced_String
main/java/_1201_1250/_1235_Maximum_Profit_in_Job_Scheduling
main/java/_1201_1250/_1236_Web_Crawler
main/java/_1201_1250/_1237_Find_Positive_Integer_Solution_for_a_Given_Equation
main/java/_1201_1250/_1238_Circular_Permutation_in_Binary_Representation
main/java/_1201_1250/_1239_Maximum_Length_of_a_Concatenated_String_with_Unique_Characters
main/java/_1201_1250/_1240_Tiling_a_Rectangle_with_the_Fewest_Squares
main/java/_1201_1250/_1243_Array_Transformation
main/java/_1201_1250/_1244_Design_A_Leaderboard
main/java/_1201_1250/_1245_Tree_Diameter
main/java/_1201_1250/_1246_Palindrome_Removal
main/java/_1201_1250/_1247_Minimum_Swaps_to_Make_Strings_Equal
main/java/_1201_1250/_1248_Count_Number_of_Nice_Subarrays
main/java/_1201_1250/_1249_Minimum_Remove_to_Make_Valid_Parentheses
main/java/_1201_1250/_1250_Check_If_It_Is_a_Good_Array
main/java/_1251_1300
main/java/_1251_1300/_1252_Cells_with_Odd_Values_in_a_Matrix
main/java/_1251_1300/_1253_Reconstruct_a_2-Row_Binary_Matrix
main/java/_1251_1300/_1254_Number_of_Closed_Islands
main/java/_1251_1300/_1255_Maximum_Score_Words_Formed_by_Letters
main/java/_1251_1300/_1256_Encode_Number
main/java/_1251_1300/_1257_Smallest_Common_Region
main/java/_1251_1300/_1258_Synonymous_Sentences
main/java/_1251_1300/_1259_Handshakes_That_Don't_Cross
main/java/_1251_1300/_1260_Shift_2D_Grid
main/java/_1251_1300/_1261_Find_Elements_in_a_Contaminated_Binary_Tree
main/java/_1251_1300/_1262_Greatest_Sum_Divisible_by_Three
main/java/_1251_1300/_1263_Minimum_Moves_to_Move_a_Box_to_Their_Target_Location
main/java/_1251_1300/_1265_Print_Immutable_Linked_List_in_Reverse
main/java/_1251_1300/_1266_Minimum_Time_Visiting_All_Points
main/java/_1251_1300/_1267_Count_Servers_that_Communicate
main/java/_1251_1300/_1268_Search_Suggestions_System
main/java/_1251_1300/_1269_Number_of_Ways_to_Stay_in_the_Same_Place_After_Some_Steps
main/java/_1251_1300/_1271_Hexspeak
main/java/_1251_1300/_1272_Remove_Interval
main/java/_1251_1300/_1273_Delete_Tree_Nodes
main/java/_1251_1300/_1274_Number_of_Ships_in_a_Rectangle
main/java/_1251_1300/_1275_Find_Winner_on_a_Tic_Tac_Toe_Game
main/java/_1251_1300/_1276_Number_of_Burgers_with_No_Waste_of_Ingredients
main/java/_1251_1300/_1277_Count_Square_Submatrices_with_All_Ones
main/java/_1251_1300/_1278_Palindrome_Partitioning_III
main/java/_1251_1300/_1281_Subtract_the_Product_and_Sum_of_Digits_of_an_Integer
main/java/_1251_1300/_1282_Group_the_People_Given_the_Group_Size_They_Belong_To
main/java/_1251_1300/_1283_Find_the_Smallest_Divisor_Given_a_Threshold
main/java/_1251_1300/_1284_Minimum_Number_of_Flips_to_Convert_Binary_Matrix_to_Zero_Matrix
main/java/_1251_1300/_1286_Iterator_for_Combination
main/java/_1251_1300/_1287_Element__Sorted_Array
main/java/_1251_1300/_1288_Remove_Covered_Intervals
main/java/_1251_1300/_1289_Minimum_Falling_Path_Sum_II
main/java/_1251_1300/_1290_Convert_Binary_Number_in_a_Linked_List_to_Integer
main/java/_1251_1300/_1291_Sequential_Digits
main/java/_1251_1300/_1292_Maximum_Side_Length_of_a_Square_with_Sum_Less_than_or_Equal_to_Threshold
main/java/_1251_1300/_1293_Shortest_Path_in_a_Grid_with_Obstacles_Elimination
main/java/_1251_1300/_1295_Find_Numbers_with_Even_Number_of_Digits
main/java/_1251_1300/_1296_Divide_Array_in_Sets_of_K_Consecutive_Numbers
main/java/_1251_1300/_1297_Maximum_Number_of_Occurrences_of_a_Substring
main/java/_1251_1300/_1298_Maximum_Candies_You_Can_Get_from_Boxes
main/java/_1251_1300/_1299_Replace_Elements_with_Greatest_Element_on_Right_Side
main/java/_1251_1300/_1300_Sum_of_Mutated_Array_Closest_to_Target
main/java/_1301_1350
main/java/_1301_1350/_1301_Number_of_Paths_with_Max_Score
main/java/_1301_1350/_1302_Deepest_Leaves_Sum
main/java/_1301_1350/_1304_Find_N_Unique_Integers_Sum_up_to_Zero
main/java/_1301_1350/_1305_All_Elements_in_Two_Binary_Search_Trees
main/java/_1301_1350/_1306_Jump_Game_III
main/java/_1301_1350/_1307_Verbal_Arithmetic_Puzzle
main/java/_1301_1350/_1309_Decrypt_String_from_Alphabet_to_Integer_Mapping
main/java/_1301_1350/_1310_XOR_Queries_of_a_Subarray
main/java/_1301_1350/_1311_Get_Watched_Videos_by_Your_Friends
main/java/_1301_1350/_1312_Minimum_Insertion_Steps_to_Make_a_String_Palindrome
main/java/_1301_1350/_1313_Decompress_Run-Length_Encoded_List
main/java/_1301_1350/_1314_Matrix_Block_Sum
main/java/_1301_1350/_1315_Sum_of_Nodes_with_Even-Valued_Grandparent
main/java/_1301_1350/_1316_Distinct_Echo_Substrings
main/java/_1301_1350/_1317_Convert_Integer_to_the_Sum_of_Two_No-Zero_Integers
main/java/_1301_1350/_1318_Minimum_Flips_to_Make_a_OR_b_Equal_to_c
main/java/_1301_1350/_1319_Number_of_Operations_to_Make_Network_Connected
main/java/_1301_1350/_1320_Minimum_Distance_to_Type_a_Word_Using_Two_Fingers
main/java/_1301_1350/_1323_Maximum_69_Number
main/java/_1301_1350/_1324_Print_Words_Vertically
main/java/_1301_1350/_1325_Delete_Leaves_With_a_Given_Value
main/java/_1301_1350/_1326_Minimum_Number_of_Taps_to_Open_to_Water_a_Garden
main/java/_1301_1350/_1328_Break_a_Palindrome
main/java/_1301_1350/_1329_Sort_the_Matrix_Diagonally
main/java/_1301_1350/_1330_Reverse_Subarray_To_Maximize_Array_Value
main/java/_1301_1350/_1331_Rank_Transform_of_an_Array
main/java/_1301_1350/_1332_Remove_Palindromic_Subsequences
main/java/_1301_1350/_1333_Filter_Restaurants_by_Vegan-Friendly,_Price_and_Distance
main/java/_1301_1350/_1334_Find_the_City_With_the_Smallest_Number_of_Neighbors_at_a_Threshold_Distance
main/java/_1301_1350/_1335_Minimum_Difficulty_of_a_Job_Schedule
main/java/_1301_1350/_1337_The_K_Weakest_Rows_in_a_Matrix
main/java/_1301_1350/_1338_Reduce_Array_Size_to_The_Half
main/java/_1301_1350/_1339_Maximum_Product_of_Splitted_Binary_Tree
main/java/_1301_1350/_1340_Jump_Game_V
main/java/_1301_1350/_1342_Number_of_Steps_to_Reduce_a_Number_to_Zero
main/java/_1301_1350/_1343_Number_of_Sub-arrays_of_Size_K_and_Average_Greater_than_or_Equal_to_Threshold
main/java/_1301_1350/_1344_Angle_Between_Hands_of_a_Clock
main/java/_1301_1350/_1345_Jump_Game_IV
main/java/_1301_1350/_1346_Check_If_N_and_Its_Double_Exist
main/java/_1301_1350/_1347_Minimum_Number_of_Steps_to_Make_Two_Strings_Anagram
main/java/_1301_1350/_1348_Tweet_Counts_Per_Frequency
main/java/_1301_1350/_1349_Maximum_Students_Taking_Exam
main/java/_1351_1400
main/java/_1351_1400/_1351_Count_Negative_Numbers_in_a_Sorted_Matrix
main/java/_1351_1400/_1352_Product_of_the_Last_K_Numbers
main/java/_1351_1400/_1353_Maximum_Number_of_Events_That_Can_Be_Attended
main/java/_1351_1400/_1354_Construct_Target_Array_With_Multiple_Sums
main/java/_1351_1400/_1356_Sort_Integers_by_The_Number_of_1_Bits
main/java/_1351_1400/_1357_Apply_Discount_Every_n_Orders
main/java/_1351_1400/_1358_Number_of_Substrings_Containing_All_Three_Characters
main/java/_1351_1400/_1359_Count_All_Valid_Pickup_and_Delivery_Options
main/java/_1351_1400/_1360_Number_of_Days_Between_Two_Dates
main/java/_1351_1400/_1361_Validate_Binary_Tree_Nodes
main/java/_1351_1400/_1362_Closest_Divisors
main/java/_1351_1400/_1363_Largest_Multiple_of_Three
main/java/_1351_1400/_1365_How_Many_Numbers_Are_Smaller_Than_the_Current_Number
main/java/_1351_1400/_1366_Rank_Teams_by_Votes
main/java/_1351_1400/_1367_Linked_List_in_Binary_Tree
main/java/_1351_1400/_1368_Minimum_Cost_to_Make_at_Least_One_Valid_Path_in_a_Grid
main/java/_1351_1400/_1370_Increasing_Decreasing_String
main/java/_1351_1400/_1371_Find_the_Longest_Substring_Containing_Vowels_in_Even_Counts
main/java/_1351_1400/_1372_Longest_ZigZag_Path_in_a_Binary_Tree
main/java/_1351_1400/_1373_Maximum_Sum_BST_in_Binary_Tree
main/java/_1351_1400/_1374_Generate_a_String_With_Characters_That_Have_Odd_Counts
main/java/_1351_1400/_1375_Bulb_Switcher_III
main/java/_1351_1400/_1376_Time_Needed_to_Inform_All_Employees
main/java/_1351_1400/_1377_Frog_Position_After_T_Seconds
main/java/_1351_1400/_1379_Find_a_Corresponding_Node_of_a_Binary_Tree_in_a_Clone_of_That_Tree
main/java/_1351_1400/_1380_Lucky_Numbers_in_a_Matrix
main/java/_1351_1400/_1381_Design_a_Stack_With_Increment_Operation
main/java/_1351_1400/_1382_Balance_a_Binary_Search_Tree
main/java/_1351_1400/_1383_Maximum_Performance_of_a_Team
main/java/_1351_1400/_1385_Find_the_Distance_Value_Between_Two_Arrays
main/java/_1351_1400/_1386_Cinema_Seat_Allocation
main/java/_1351_1400/_1387_Sort_Integers_by_The_Power_Value
main/java/_1351_1400/_1388_Pizza_With_3n_Slices
main/java/_1351_1400/_1389_Create_Target_Array_in_the_Given_Order
main/java/_1351_1400/_1390_Four_Divisors
main/java/_1351_1400/_1391_Check_if_There_is_a_Valid_Path_in_a_Grid
main/java/_1351_1400/_1392_Longest_Happy_Prefix
main/java/_1351_1400/_1394_Find_Lucky_Integer_in_an_Array
main/java/_1351_1400/_1395_Count_Number_of_Teams
main/java/_1351_1400/_1396_Design_Underground_System
main/java/_1351_1400/_1397_Find_All_Good_Strings
main/java/_1351_1400/_1399_Count_Largest_Group
main/java/_1351_1400/_1400_Construct_K_Palindrome_Strings
main/java/_1401_1450
main/java/_1401_1450/_1401_Circle_and_Rectangle_Overlapping
main/java/_1401_1450/_1402_Reducing_Dishes
main/java/_1401_1450/_1403_Minimum_Subsequence_in_Non-Increasing_Order
main/java/_1401_1450/_1404_Number_of_Steps_to_Reduce_a_Number_in_Binary_Representation_to_One
main/java/_1401_1450/_1405_Longest_Happy_String
main/java/_1401_1450/_1406_Stone_Game_III
main/java/_1401_1450/_1408_String_Matching_in_an_Array
main/java/_1401_1450/_1409_Queries_on_a_Permutation_With_Key
main/java/_1401_1450/_1410_HTML_Entity_Parser
main/java/_1401_1450/_1411_Number_of_Ways_to_Paint_N_×_3_Grid
main/java/_1401_1450/_1413_Minimum_Value_to_Get_Positive_Step_by_Step_Sum
main/java/_1401_1450/_1414_Find_the_Minimum_Number_of_Fibonacci_Numbers_Whose_Sum_Is_K
main/java/_1401_1450/_1415_The_k-th_Lexicographical_String_of_All_Happy_Strings_of_Length_n
main/java/_1401_1450/_1416_Restore_The_Array
main/java/_1401_1450/_1417_Reformat_The_String
main/java/_1401_1450/_1418_Display_Table_of_Food_Orders_in_a_Restaurant
main/java/_1401_1450/_1419_Minimum_Number_of_Frogs_Croaking
main/java/_1401_1450/_1420_Build_Array_Where_You_Can_Find_The_Maximum_Exactly_K_Comparisons
main/java/_1401_1450/_1422_Maximum_Score_After_Splitting_a_String
main/java/_1401_1450/_1423_Maximum_Points_You_Can_Obtain_from_Cards
main/java/_1401_1450/_1424_Diagonal_Traverse_II
main/java/_1401_1450/_1425_Constrained_Subsequence_Sum
main/java/_1401_1450/_1426_Counting_Elements
main/java/_1401_1450/_1427_Perform_String_Shifts
main/java/_1401_1450/_1428_Leftmost_Column_with_at_Least_a_One
main/java/_1401_1450/_1429_First_Unique_Number
main/java/_1401_1450/_1430_Check_If_a_String_Is_a_Valid_Sequence_from_Root_to_Leaves_Path_in_a_Binary_Tree
main/java/_1401_1450/_1431_Kids_With_the_Greatest_Number_of_Candies
main/java/_1401_1450/_1432_Max_Difference_You_Can_Get_From_Changing_an_Integer
main/java/_1401_1450/_1433_Check_If_a_String_Can_Break_Another_String
main/java/_1401_1450/_1434_Number_of_Ways_to_Wear_Different_Hats_to_Each_Other
main/java/_1401_1450/_1436_Destination_City
main/java/_1401_1450/_1437_Check_If_All_1's_Are_at_Least_Length_K_Places_Away
main/java/_1401_1450/_1438_Longest_Continuous_Subarray_With_Absolute_Diff_Less_Than_or_Equal_to_Limit
main/java/_1401_1450/_1439_Find_the_Kth_Smallest_Sum_of_a_Matrix_With_Sorted_Rows
main/java/_1401_1450/_1441_Build_an_Array_With_Stack_Operations
main/java/_1401_1450/_1442_Count_Triplets_That_Can_Form_Two_Arrays_of_Equal_XOR
main/java/_1401_1450/_1443_Minimum_Time_to_Collect_All_Apples_in_a_Tree
main/java/_1401_1450/_1444_Number_of_Ways_of_Cutting_a_Pizza
main/java/_1401_1450/_1446_Consecutive_Characters
main/java/_1401_1450/_1447_Simplified_Fractions
main/java/_1401_1450/_1448_Count_Good_Nodes_in_Binary_Tree
main/java/_1401_1450/_1449_Form_Largest_Integer_With_Digits_That_Add_up_to_Target
main/java/_1401_1450/_1450_Number_of_Students_Doing_Homework_at_a_Given_Time
main/java/_1451_1500
main/java/_1451_1500/_1451_Rearrange_Words_in_a_Sentence
main/java/_1451_1500/_1452_People_Whose_List_of_Favorite_Companies_Is_Not_a_Subset_of_Another_List
main/java/_1451_1500/_1453_Maximum_Number_of_Darts_Inside_of_a_Circular_Dartboard
main/java/_1451_1500/_1455_Check_If_a_Word_Occurs_As_a_Prefix_of_Any_Word_in_a_Sentence
main/java/_1451_1500/_1456_Maximum_Number_of_Vowels_in_a_Substring_of_Given_Length
main/java/_1451_1500/_1457_Pseudo-Palindromic_Paths_in_a_Binary_Tree
main/java/_1451_1500/_1458_Max_Dot_Product_of_Two_Subsequences
main/java/_1451_1500/_1460_Make_Two_Arrays_Equal_by_Reversing_Sub-arrays
main/java/_1451_1500/_1461_Check_If_a_String_Contains_All_Binary_Codes_of_Size_K
main/java/_1451_1500/_1462_Course_Schedule_IV
main/java/_1451_1500/_1463_Cherry_Pickup_II
main/java/_1451_1500/_1464_Maximum_Product_of_Two_Elements_in_an_Array
main/java/_1451_1500/_1465_Maximum_Area_of_a_Piece_of_Cake_After_Horizontal_and_Vertical_Cuts
main/java/_1451_1500/_1466_Reorder_Routes_to_Make_All_Paths_Lead_to_the_City_Zero
main/java/_1451_1500/_1467_Probability_of_a_Two_Boxes_Having_The_Same_Number_of_Distinct_Balls
main/java/_1451_1500/_1469_Find_All_The_Lonely_Nodes
main/java/_1451_1500/_1470_Shuffle_the_Array
main/java/_1451_1500/_1471_The_k_Strongest_Values_in_an_Array
main/java/_1451_1500/_1472_Design_Browser_History
main/java/_1451_1500/_1473_Paint_House_III
main/java/_1451_1500/_1474_Delete_N_Nodes_After_M_Nodes_of_a_Linked_List
main/java/_1451_1500/_1475_Final_Prices_With_a_Special_Discount_in_a_Shop
main/java/_1451_1500/_1476_Subrectangle_Queries
main/java/_1451_1500/_1477_Find_Two_Non-overlapping_Sub-arrays_Each_With_Target_Sum
main/java/_1451_1500/_1478_Allocate_Mailboxes
main/java/_1451_1500/_1480_Running_Sum_of_1d_Array
main/java/_1451_1500/_1481_Least_Number_of_Unique_Integers_after_K_Removals
main/java/_1451_1500/_1482_Minimum_Number_of_Days_to_Make_m_Bouquets
main/java/_1451_1500/_1483_Kth_Ancestor_of_a_Tree_Node
main/java/_1451_1500/_1485_Clone_Binary_Tree_With_Random_Pointer
main/java/_1451_1500/_1486_XOR_Operation_in_an_Array
main/java/_1451_1500/_1487_Making_File_Names_Unique
main/java/_1451_1500/_1488_Avoid_Flood_in_The_City
main/java/_1451_1500/_1489_Find_Critical_and_Pseudo-Critical_Edges_in_Minimum_Spanning_Tree
main/java/_1451_1500/_1490_Clone_N-ary_Tree
main/java/_1451_1500/_1491_Average_Salary_Excluding_the_Minimum_and_Maximum_Salary
main/java/_1451_1500/_1492_The_kth_Factor_of_n
main/java/_1451_1500/_1493_Longest_Subarray_of_1's_After_Deleting_One_Element
main/java/_1451_1500/_1494_Parallel_Courses_II
main/java/_1451_1500/_1496_Path_Crossing
main/java/_1451_1500/_1497_Check_If_Array_Pairs_Are_Divisible_by_k
main/java/_1451_1500/_1498_Number_of_Subsequences_That_Satisfy_the_Given_Sum_Condition
main/java/_1451_1500/_1499_Max_Value_of_Equation
main/java/_1451_1500/_1500_Design_a_File_Sharing_System
main/java/_1501_1550
main/java/_1501_1550/_1502_Can_Make_Arithmetic_Progression_From_Sequence
main/java/_1501_1550/_1503_Last_Moment_Before_All_Ants_Fall_Out_of_a_Plank
main/java/_1501_1550/_1504_Count_Submatrices_With_All_Ones
main/java/_1501_1550/_1505_Minimum_Possible_Integer_After_at_Most_K_Adjacent_Swaps_On_Digits
main/java/_1501_1550/_1506_Find_Root_of_N-Ary_Tree
main/java/_1501_1550/_1507_Reformat_Date
main/java/_1501_1550/_1508_Range_Sum_of_Sorted_Subarray_Sums
main/java/_1501_1550/_1509_Minimum_Difference_Between_Largest_and_Smallest_Value_in_Three_Moves
main/java/_1501_1550/_1510_Stone_Game_IV
main/java/_1501_1550/_1512_Number_of_Good_Pairs
main/java/_1501_1550/_1513_Number_of_Substrings_With_Only_1s
main/java/_1501_1550/_1514_Path_with_Maximum_Probability
main/java/_1501_1550/_1515_Best_Position_for_a_Service_Centre
main/java/_1501_1550/_1516_Move_Sub-Tree_of_N-Ary_Tree
main/java/_1501_1550/_1518_Water_Bottles
main/java/_1501_1550/_1519_Number_of_Nodes_in_the_Sub-Tree_With_the_Same_Label
main/java/_1501_1550/_1520_Maximum_Number_of_Non-Overlapping_Substrings
main/java/_1501_1550/_1521_Find_a_Value_of_a_Mysterious_Function_Closest_to_Target
main/java/_1501_1550/_1522_Diameter_of_N-Ary_Tree
main/java/_1501_1550/_1523_Count_Odd_Numbers_in_an_Interval_Range
main/java/_1501_1550/_1524_Number_of_Sub-arrays_With_Odd_Sum
main/java/_1501_1550/_1525_Number_of_Good_Ways_to_Split_a_String
main/java/_1501_1550/_1526_Minimum_Number_of_Increments_on_Subarrays_to_Form_a_Target_Array
main/java/_1501_1550/_1528_Shuffle_String
main/java/_1501_1550/_1529_Bulb_Switcher_IV
main/java/_1501_1550/_1530_Number_of_Good_Leaf_Nodes_Pairs
main/java/_1501_1550/_1531_String_Compression_II
main/java/_1501_1550/_1533_Find_the_Index_of_the_Large_Integer
main/java/_1501_1550/_1534_Count_Good_Triplets
main/java/_1501_1550/_1535_Find_the_Winner_of_an_Array_Game
main/java/_1501_1550/_1536_Minimum_Swaps_to_Arrange_a_Binary_Grid
main/java/_1501_1550/_1537_Get_the_Maximum_Score
main/java/_1501_1550/_1538_Guess_the_Majority_in_a_Hidden_Array
main/java/_1501_1550/_1539_Kth_Missing_Positive_Number
main/java/_1501_1550/_1540_Can_Convert_String_in_K_Moves
main/java/_1501_1550/_1541_Minimum_Insertions_to_Balance_a_Parentheses_String
main/java/_1501_1550/_1542_Find_Longest_Awesome_Substring
main/java/_1501_1550/_1544_Make_The_String_Great
main/java/_1501_1550/_1545_Find_Kth_Bit_in_Nth_Binary_String
main/java/_1501_1550/_1546_Maximum_Number_of_Non-Overlapping_Subarrays_With_Sum_Equals_Target
main/java/_1501_1550/_1547_Minimum_Cost_to_Cut_a_Stick
main/java/_1501_1550/_1548_The_Most_Similar_Path_in_a_Graph
main/java/_1501_1550/_1550_Three_Consecutive_Odds
main/java/_1551_1600
main/java/_1551_1600/_1551_Minimum_Operations_to_Make_Array_Equal
main/java/_1551_1600/_1552_Magnetic_Force_Between_Two_Balls
main/java/_1551_1600/_1553_Minimum_Number_of_Days_to_Eat_N_Oranges
main/java/_1551_1600/_1554_Strings_Differ_by_One_Character
main/java/_1551_1600/_1556_Thousand_Separator
main/java/_1551_1600/_1557_Minimum_Number_of_Vertices_to_Reach_All_Nodes
main/java/_1551_1600/_1558_Minimum_Numbers_of_Function_Calls_to_Make_Target_Array
main/java/_1551_1600/_1559_Detect_Cycles_in_2D_Grid
main/java/_1551_1600/_1560_Most_Visited_Sector_in_a_Circular_Track
main/java/_1551_1600/_1561_Maximum_Number_of_Coins_You_Can_Get
main/java/_1551_1600/_1562_Find_Latest_Group_of_Size_M
main/java/_1551_1600/_1563_Stone_Game_V
main/java/_1551_1600/_1564_Put_Boxes_Into_the_Warehouse_I
main/java/_1551_1600/_1566_Detect_Pattern_of_Length_M_Repeated_K_or_More_Times
main/java/_1551_1600/_1567_Maximum_Length_of_Subarray_With_Positive_Product
main/java/_1551_1600/_1568_Minimum_Number_of_Days_to_Disconnect_Island
main/java/_1551_1600/_1569_Number_of_Ways_to_Reorder_Array_to_Get_Same_BST
main/java/_1551_1600/_1570_Dot_Product_of_Two_Sparse_Vectors____New
main/java/_1551_1600/_1572_Matrix_Diagonal_Sum
main/java/_1551_1600/_1573_Number_of_Ways_to_Split_a_String
main/java/_1551_1600/_1574_Shortest_Subarray_to_be_Removed_to_Make_Array_Sorted
main/java/_1551_1600/_1575_Count_All_Possible_Routes
main/java/_1601_1650
main/java/_1651_1700